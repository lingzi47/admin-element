{"remainingRequest":"C:\\Users\\Administrator\\Desktop\\预见未来后台管理系统\\后台\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Administrator\\Desktop\\预见未来后台管理系统\\后台\\src\\views\\login\\components\\identify.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Administrator\\Desktop\\预见未来后台管理系统\\后台\\src\\views\\login\\components\\identify.vue","mtime":1656764943179},{"path":"C:\\Users\\Administrator\\Desktop\\预见未来后台管理系统\\后台\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\Administrator\\Desktop\\预见未来后台管理系统\\后台\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\预见未来后台管理系统\\后台\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiSWRlbnRpZnlDb2RlIiwKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgaWRlbnRpZnlDb2RlOiAiIiwKICAgIH07CiAgfSwKICBwcm9wczogewogICAgaWRlbnRpZnlDb2RlczogewogICAgICAvL+mqjOivgeeggeS7juivpeWtl+auteS4reaKveWPlueUn+aIkAogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgIGRlZmF1bHQ6ICIwMTIzNDU2Nzg5YWJjZGVmZ2hpamttbnBxcnN0dXZ3eHl6QUJDREVGR0hJSktNTlBRUlNUVVZXWFlaIiwKICAgIH0sCiAgICBmb250U2l6ZU1pbjogewogICAgICAvLyDlrZfkvZPmnIDlsI/lgLwKICAgICAgdHlwZTogTnVtYmVyLAogICAgICBkZWZhdWx0OiAyNSwKICAgIH0sCiAgICBmb250U2l6ZU1heDogewogICAgICAvLyDlrZfkvZPmnIDlpKflgLwKICAgICAgdHlwZTogTnVtYmVyLAogICAgICBkZWZhdWx0OiAzNSwKICAgIH0sCiAgICBiYWNrZ3JvdW5kQ29sb3JNaW46IHsKICAgICAgLy8g6aqM6K+B56CB5Zu+54mH6IOM5pmv6Imy5pyA5bCP5YC8CiAgICAgIHR5cGU6IE51bWJlciwKICAgICAgZGVmYXVsdDogMjAwLAogICAgfSwKICAgIGJhY2tncm91bmRDb2xvck1heDogewogICAgICAvLyDpqozor4HnoIHlm77niYfog4zmma/oibLmnIDlpKflgLwKICAgICAgdHlwZTogTnVtYmVyLAogICAgICBkZWZhdWx0OiAyMjAsCiAgICB9LAogICAgZG90Q29sb3JNaW46IHsKICAgICAgLy8g6IOM5pmv5bmy5omw54K55pyA5bCP5YC8CiAgICAgIHR5cGU6IE51bWJlciwKICAgICAgZGVmYXVsdDogNjAsCiAgICB9LAogICAgZG90Q29sb3JNYXg6IHsKICAgICAgLy8g6IOM5pmv5bmy5omw54K55pyA5aSn5YC8CiAgICAgIHR5cGU6IE51bWJlciwKICAgICAgZGVmYXVsdDogMTIwLAogICAgfSwKICAgIGNvbnRlbnRXaWR0aDogewogICAgICAvL+WuueWZqOWuveW6pgogICAgICB0eXBlOiBOdW1iZXIsCiAgICAgIGRlZmF1bHQ6IDExNSwKICAgIH0sCiAgICBjb250ZW50SGVpZ2h0OiB7CiAgICAgIC8v5a655Zmo6auY5bqmCiAgICAgIHR5cGU6IE51bWJlciwKICAgICAgZGVmYXVsdDogNDMsCiAgICB9LAogIH0sCiAgd2F0Y2g6IHsKICAgIGlkZW50aWZ5Q29kZSgpIHsKICAgICAgdGhpcy5kcmF3UGljKCk7CiAgICB9LAogIH0sCiAgbW91bnRlZCgpIHsKICAgIHRoaXMuZHJhd1BpYygpOwogICAgdGhpcy5tYWtlQ29kZSh0aGlzLmlkZW50aWZ5Q29kZXMsIDQpOwogIH0sCiAgbWV0aG9kczogewogICAgLy8g55Sf5oiQ5LiA5Liq6ZqP5py65pWwCiAgICByYW5kb21OdW0obWluLCBtYXgpIHsKICAgICAgcmV0dXJuIE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIChtYXggLSBtaW4pICsgbWluKTsKICAgIH0sCiAgICAvLyDnlJ/miJDkuIDkuKrpmo/mnLrnmoTpopzoibIKICAgIHJhbmRvbUNvbG9yKG1pbiwgbWF4KSB7CiAgICAgIGxldCByID0gdGhpcy5yYW5kb21OdW0obWluLCBtYXgpOwogICAgICBsZXQgZyA9IHRoaXMucmFuZG9tTnVtKG1pbiwgbWF4KTsKICAgICAgbGV0IGIgPSB0aGlzLnJhbmRvbU51bShtaW4sIG1heCk7CiAgICAgIHJldHVybiAicmdiKCIgKyByICsgIiwiICsgZyArICIsIiArIGIgKyAiKSI7CiAgICB9LAogICAgZHJhd1BpYygpIHsKICAgICAgbGV0IGNhbnZhcyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJjb250LWNhbnZhcyIpOwogICAgICBsZXQgY3R4ID0gY2FudmFzLmdldENvbnRleHQoIjJkIik7CiAgICAgIGN0eC50ZXh0QmFzZWxpbmUgPSAiYm90dG9tIjsKICAgICAgLy8g57uY5Yi26IOM5pmvCiAgICAgIGN0eC5maWxsU3R5bGUgPSB0aGlzLnJhbmRvbUNvbG9yKAogICAgICAgIHRoaXMuYmFja2dyb3VuZENvbG9yTWluLAogICAgICAgIHRoaXMuYmFja2dyb3VuZENvbG9yTWF4CiAgICAgICk7CiAgICAgIGN0eC5maWxsUmVjdCgwLCAwLCB0aGlzLmNvbnRlbnRXaWR0aCwgdGhpcy5jb250ZW50SGVpZ2h0KTsKICAgICAgLy8g57uY5Yi25paH5a2XCiAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5pZGVudGlmeUNvZGUubGVuZ3RoOyBpKyspIHsKICAgICAgICB0aGlzLmRyYXdUZXh0KGN0eCwgdGhpcy5pZGVudGlmeUNvZGVbaV0sIGkpOwogICAgICB9CiAgICAgIHRoaXMuZHJhd0xpbmUoY3R4KTsKICAgICAgdGhpcy5kcmF3RG90KGN0eCk7CiAgICB9LAogICAgZHJhd1RleHQoY3R4LCB0eHQsIGkpIHsKICAgICAgY3R4LmZpbGxTdHlsZSA9IHRoaXMucmFuZG9tQ29sb3IoNTAsIDE2MCk7IC8v6ZqP5py655Sf5oiQ5a2X5L2T6aKc6ImyCiAgICAgIGN0eC5mb250ID0KICAgICAgICB0aGlzLnJhbmRvbU51bSh0aGlzLmZvbnRTaXplTWluLCB0aGlzLmZvbnRTaXplTWF4KSArICJweCBTaW1IZWkiOyAvL+maj+acuueUn+aIkOWtl+S9k+Wkp+WwjwogICAgICBsZXQgeCA9IChpICsgMSkgKiAodGhpcy5jb250ZW50V2lkdGggLyAodGhpcy5pZGVudGlmeUNvZGUubGVuZ3RoICsgMSkpOwogICAgICBsZXQgeSA9IHRoaXMucmFuZG9tTnVtKHRoaXMuZm9udFNpemVNYXgsIHRoaXMuY29udGVudEhlaWdodCAtIDUpOwogICAgICB2YXIgZGVnID0gdGhpcy5yYW5kb21OdW0oLTMwLCAzMCk7CiAgICAgIC8vIOS/ruaUueWdkOagh+WOn+eCueWSjOaXi+i9rOinkuW6pgogICAgICBjdHgudHJhbnNsYXRlKHgsIHkpOwogICAgICBjdHgucm90YXRlKChkZWcgKiBNYXRoLlBJKSAvIDE4MCk7CiAgICAgIGN0eC5maWxsVGV4dCh0eHQsIDAsIDApOwogICAgICAvLyDmgaLlpI3lnZDmoIfljp/ngrnlkozml4vovazop5LluqYKICAgICAgY3R4LnJvdGF0ZSgoLWRlZyAqIE1hdGguUEkpIC8gMTgwKTsKICAgICAgY3R4LnRyYW5zbGF0ZSgteCwgLXkpOwogICAgfSwKICAgIGRyYXdMaW5lKGN0eCkgewogICAgICAvLyDnu5jliLblubLmibDnur8KICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCA0OyBpKyspIHsKICAgICAgICBjdHguc3Ryb2tlU3R5bGUgPSB0aGlzLnJhbmRvbUNvbG9yKDEwMCwgMjAwKTsKICAgICAgICBjdHguYmVnaW5QYXRoKCk7CiAgICAgICAgY3R4Lm1vdmVUbygKICAgICAgICAgIHRoaXMucmFuZG9tTnVtKDAsIHRoaXMuY29udGVudFdpZHRoKSwKICAgICAgICAgIHRoaXMucmFuZG9tTnVtKDAsIHRoaXMuY29udGVudEhlaWdodCkKICAgICAgICApOwogICAgICAgIGN0eC5saW5lVG8oCiAgICAgICAgICB0aGlzLnJhbmRvbU51bSgwLCB0aGlzLmNvbnRlbnRXaWR0aCksCiAgICAgICAgICB0aGlzLnJhbmRvbU51bSgwLCB0aGlzLmNvbnRlbnRIZWlnaHQpCiAgICAgICAgKTsKICAgICAgICBjdHguc3Ryb2tlKCk7CiAgICAgIH0KICAgIH0sCiAgICBkcmF3RG90KGN0eCkgewogICAgICAvLyDnu5jliLblubLmibDngrkKICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCAzMDsgaSsrKSB7CiAgICAgICAgY3R4LmZpbGxTdHlsZSA9IHRoaXMucmFuZG9tQ29sb3IoMCwgMjU1KTsKICAgICAgICBjdHguYmVnaW5QYXRoKCk7CiAgICAgICAgY3R4LmFyYygKICAgICAgICAgIHRoaXMucmFuZG9tTnVtKDAsIHRoaXMuY29udGVudFdpZHRoKSwKICAgICAgICAgIHRoaXMucmFuZG9tTnVtKDAsIHRoaXMuY29udGVudEhlaWdodCksCiAgICAgICAgICAxLAogICAgICAgICAgMCwKICAgICAgICAgIDIgKiBNYXRoLlBJCiAgICAgICAgKTsKICAgICAgICBjdHguZmlsbCgpOwogICAgICB9CiAgICB9LAogICAgLyrliIfmjaLpqozor4HnoIFzdGFydCovCiAgICBjaGFuZ2VDb2RlKCkgewogICAgICB0aGlzLmlkZW50aWZ5Q29kZSA9ICIiOwogICAgICB0aGlzLm1ha2VDb2RlKHRoaXMuaWRlbnRpZnlDb2RlcywgNCk7CiAgICB9LAogICAgbWFrZUNvZGUoZSwgbikgewogICAgICBmb3IgKGxldCBpID0gMDsgaSA8IG47IGkrKykgewogICAgICAgIHRoaXMuaWRlbnRpZnlDb2RlICs9IGVbdGhpcy5yYW5kb21OdW0oMCwgZS5sZW5ndGgpXTsKICAgICAgfQogICAgICAvL2NvbnNvbGUubG9nKCJjb2RlID0gIiwgdGhpcy5pZGVudGlmeUNvZGUpOwogICAgICB0aGlzLiRlbWl0KCJ1cGRhdGU6Y2hhbmdlQ29kZSIsIHRoaXMuaWRlbnRpZnlDb2RlKTsKICAgIH0sCiAgICAvKuWIh+aNoumqjOivgeeggWVuZCovCiAgfSwKfTsK"},{"version":3,"sources":["identify.vue"],"names":[],"mappingsfile":"identify.vue","sourceRoot":"src/views/login/components","sourcesContent":["<template>\n  <div class=\"canvas-box\" @click=\"changeCode\">\n    <canvas\n      id=\"cont-canvas\"\n      :width=\"contentWidth\"\n      :height=\"contentHeight\"\n    ></canvas>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"IdentifyCode\",\n  data() {\n    return {\n      identifyCode: \"\",\n    };\n  },\n  props: {\n    identifyCodes: {\n      //验证码从该字段中抽取生成\n      type: String,\n      default: \"0123456789abcdefghijkmnpqrstuvwxyzABCDEFGHIJKMNPQRSTUVWXYZ\",\n    },\n    fontSizeMin: {\n      // 字体最小值\n      type: Number,\n      default: 25,\n    },\n    fontSizeMax: {\n      // 字体最大值\n      type: Number,\n      default: 35,\n    },\n    backgroundColorMin: {\n      // 验证码图片背景色最小值\n      type: Number,\n      default: 200,\n    },\n    backgroundColorMax: {\n      // 验证码图片背景色最大值\n      type: Number,\n      default: 220,\n    },\n    dotColorMin: {\n      // 背景干扰点最小值\n      type: Number,\n      default: 60,\n    },\n    dotColorMax: {\n      // 背景干扰点最大值\n      type: Number,\n      default: 120,\n    },\n    contentWidth: {\n      //容器宽度\n      type: Number,\n      default: 115,\n    },\n    contentHeight: {\n      //容器高度\n      type: Number,\n      default: 43,\n    },\n  },\n  watch: {\n    identifyCode() {\n      this.drawPic();\n    },\n  },\n  mounted() {\n    this.drawPic();\n    this.makeCode(this.identifyCodes, 4);\n  },\n  methods: {\n    // 生成一个随机数\n    randomNum(min, max) {\n      return Math.floor(Math.random() * (max - min) + min);\n    },\n    // 生成一个随机的颜色\n    randomColor(min, max) {\n      let r = this.randomNum(min, max);\n      let g = this.randomNum(min, max);\n      let b = this.randomNum(min, max);\n      return \"rgb(\" + r + \",\" + g + \",\" + b + \")\";\n    },\n    drawPic() {\n      let canvas = document.getElementById(\"cont-canvas\");\n      let ctx = canvas.getContext(\"2d\");\n      ctx.textBaseline = \"bottom\";\n      // 绘制背景\n      ctx.fillStyle = this.randomColor(\n        this.backgroundColorMin,\n        this.backgroundColorMax\n      );\n      ctx.fillRect(0, 0, this.contentWidth, this.contentHeight);\n      // 绘制文字\n      for (let i = 0; i < this.identifyCode.length; i++) {\n        this.drawText(ctx, this.identifyCode[i], i);\n      }\n      this.drawLine(ctx);\n      this.drawDot(ctx);\n    },\n    drawText(ctx, txt, i) {\n      ctx.fillStyle = this.randomColor(50, 160); //随机生成字体颜色\n      ctx.font =\n        this.randomNum(this.fontSizeMin, this.fontSizeMax) + \"px SimHei\"; //随机生成字体大小\n      let x = (i + 1) * (this.contentWidth / (this.identifyCode.length + 1));\n      let y = this.randomNum(this.fontSizeMax, this.contentHeight - 5);\n      var deg = this.randomNum(-30, 30);\n      // 修改坐标原点和旋转角度\n      ctx.translate(x, y);\n      ctx.rotate((deg * Math.PI) / 180);\n      ctx.fillText(txt, 0, 0);\n      // 恢复坐标原点和旋转角度\n      ctx.rotate((-deg * Math.PI) / 180);\n      ctx.translate(-x, -y);\n    },\n    drawLine(ctx) {\n      // 绘制干扰线\n      for (let i = 0; i < 4; i++) {\n        ctx.strokeStyle = this.randomColor(100, 200);\n        ctx.beginPath();\n        ctx.moveTo(\n          this.randomNum(0, this.contentWidth),\n          this.randomNum(0, this.contentHeight)\n        );\n        ctx.lineTo(\n          this.randomNum(0, this.contentWidth),\n          this.randomNum(0, this.contentHeight)\n        );\n        ctx.stroke();\n      }\n    },\n    drawDot(ctx) {\n      // 绘制干扰点\n      for (let i = 0; i < 30; i++) {\n        ctx.fillStyle = this.randomColor(0, 255);\n        ctx.beginPath();\n        ctx.arc(\n          this.randomNum(0, this.contentWidth),\n          this.randomNum(0, this.contentHeight),\n          1,\n          0,\n          2 * Math.PI\n        );\n        ctx.fill();\n      }\n    },\n    /*切换验证码start*/\n    changeCode() {\n      this.identifyCode = \"\";\n      this.makeCode(this.identifyCodes, 4);\n    },\n    makeCode(e, n) {\n      for (let i = 0; i < n; i++) {\n        this.identifyCode += e[this.randomNum(0, e.length)];\n      }\n      //console.log(\"code = \", this.identifyCode);\n      this.$emit(\"update:changeCode\", this.identifyCode);\n    },\n    /*切换验证码end*/\n  },\n};\n</script>\n<style scoped>\n#cont-canvas {\n  display: block;\n  cursor: pointer;\n}\n</style>\n"]}]}