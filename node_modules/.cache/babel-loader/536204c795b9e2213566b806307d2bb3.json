{"remainingRequest":"C:\\Users\\Administrator\\Desktop\\1\\预见未来后台管理系统\\后台\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\Administrator\\Desktop\\1\\预见未来后台管理系统\\后台\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Administrator\\Desktop\\1\\预见未来后台管理系统\\后台\\src\\mock\\user.js","dependencies":[{"path":"C:\\Users\\Administrator\\Desktop\\1\\预见未来后台管理系统\\后台\\src\\mock\\user.js","mtime":1657000581308},{"path":"C:\\Users\\Administrator\\Desktop\\1\\预见未来后台管理系统\\后台\\babel.config.js","mtime":1646805521000},{"path":"C:\\Users\\Administrator\\Desktop\\1\\预见未来后台管理系统\\后台\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\1\\预见未来后台管理系统\\后台\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\1\\预见未来后台管理系统\\后台\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiQzovVXNlcnMvQWRtaW5pc3RyYXRvci9EZXNrdG9wLzEvXHU5ODg0XHU4OUMxXHU2NzJBXHU2NzY1XHU1NDBFXHU1M0YwXHU3QkExXHU3NDA2XHU3Q0ZCXHU3RURGL1x1NTQwRVx1NTNGMC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0U3ByZWFkMiI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmZpbHRlci5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmcuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5mcm9tLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLml0ZXJhdG9yLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc2V0LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5pdGVyYXRvci5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnNsaWNlLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc3BsaWNlLmpzIjsKaW1wb3J0IE1vY2sgZnJvbSAnbW9ja2pzJzsKaW1wb3J0IHsgZ2V0VXJsUGFyYW0gfSBmcm9tICdAL3V0aWxzL2luZGV4JzsKaW1wb3J0IHsgdXNlckxpc3REYXRhLCByb2xlUGVybWlzc2lvbnNEYXRhIH0gZnJvbSAnQC91dGlscy9kYXRhJzsKdmFyIHVzZXJMaXN0ID0gdXNlckxpc3REYXRhKCk7CnZhciByb2xlUGVybWlzc2lvbnMgPSByb2xlUGVybWlzc2lvbnNEYXRhKCk7CmV4cG9ydCBkZWZhdWx0IHsKICAvLyDojrflj5bnlKjmiLfor6bmg4UKICBnZXRVc2VySW5mbzogZnVuY3Rpb24gZ2V0VXNlckluZm8oY29uZmlnKSB7CiAgICB2YXIgZGF0YSA9IEpTT04ucGFyc2UoY29uZmlnLmJvZHkpOwogICAgdmFyIHVzZXJJbmZvID0gdXNlckxpc3QuZmlsdGVyKGZ1bmN0aW9uIChpdGVtKSB7CiAgICAgIHJldHVybiBpdGVtLnVzZXJuYW1lICsgIi1hY2Nlc3NUb2tlbiIgPT0gZGF0YS50b2tlbjsKICAgIH0pWzBdOyAvLyDmoLnmja7nlKjmiLfnmoTop5LoibLojrflj5bmk43kvZwKCiAgICB2YXIgcm9sZXMgPSB1c2VySW5mby5yb2xlczsgLy/op5LoibLmlbDnu4QKCiAgICBjb25zb2xlLmxvZyhyb2xlcyk7CiAgICB2YXIgcm9sZU1lbnUgPSB7fTsKCiAgICBmb3IgKHZhciBpID0gMDsgaSA8IHJvbGVzLmxlbmd0aDsgaSsrKSB7CiAgICAgIHJvbGVNZW51ID0gX29iamVjdFNwcmVhZChfb2JqZWN0U3ByZWFkKHt9LCByb2xlTWVudSksIHJvbGVQZXJtaXNzaW9uc1tyb2xlc1tpXV0pOwogICAgfQoKICAgIHZhciBvcGVyYXRlTGlzdCA9IFtdOwoKICAgIGZvciAodmFyIGtleSBpbiByb2xlTWVudSkgewogICAgICBmb3IgKHZhciBjaGlsS2V5IGluIHJvbGVNZW51W2tleV0pIHsKICAgICAgICBpZiAocm9sZU1lbnVba2V5XVtjaGlsS2V5XS5sZW5ndGgpIHsKICAgICAgICAgIHZhciBtZW51T3BlciA9IHJvbGVNZW51W2tleV1bY2hpbEtleV07CgogICAgICAgICAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IG1lbnVPcGVyLmxlbmd0aDsgX2krKykgewogICAgICAgICAgICBvcGVyYXRlTGlzdC5wdXNoKGNoaWxLZXkgKyBtZW51T3BlcltfaV0pOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfQogICAgfQoKICAgIG9wZXJhdGVMaXN0ID0gQXJyYXkuZnJvbShuZXcgU2V0KG9wZXJhdGVMaXN0KSk7CiAgICB1c2VySW5mb1sib3BlcmF0ZUxpc3QiXSA9IG9wZXJhdGVMaXN0OyAvLyBjb25zb2xlLmxvZygi55So5oi36K+m5oOFIiwgSlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeSh1c2VySW5mbykpKTsKCiAgICByZXR1cm4gewogICAgICBzdGF0dXM6IDIwMCwKICAgICAgbWVzc2FnZTogIuaTjeS9nOaIkOWKnyIsCiAgICAgIGRhdGE6IHVzZXJJbmZvCiAgICB9OwogIH0sCiAgLy8g6I635Y+W55So5oi35YiX6KGoCiAgZ2V0VXNlckxpc3Q6IGZ1bmN0aW9uIGdldFVzZXJMaXN0KGNvbmZpZykgewogICAgdmFyIHBhcmFtZXRlciA9IGdldFVybFBhcmFtKGNvbmZpZy51cmwpOwogICAgdmFyIGRhdGEgPSB1c2VyTGlzdC5maWx0ZXIoZnVuY3Rpb24gKGl0ZW0pIHsKICAgICAgcmV0dXJuIGl0ZW0udXNlcm5hbWUuaW5kZXhPZihwYXJhbWV0ZXIudXNlcm5hbWUpICE9IC0xICYmIChwYXJhbWV0ZXIucm9sZXMgPyBpdGVtLnJvbGVzLmluZGV4T2YocGFyYW1ldGVyLnJvbGVzKSAhPSAtMSA6IHRydWUpOwogICAgfSk7CiAgICB2YXIgdG90YWwgPSBkYXRhLmxlbmd0aDsKICAgIHZhciBzdGFydE51bSA9IChwYXJhbWV0ZXIuY3VycmVudFBhZ2UgLSAxKSAqIHBhcmFtZXRlci5wYWdlU2l6ZSArIDE7CiAgICB2YXIgZW5kTnVtID0gcGFyYW1ldGVyLmN1cnJlbnRQYWdlICogcGFyYW1ldGVyLnBhZ2VTaXplOwogICAgcmV0dXJuIHsKICAgICAgc3RhdHVzOiAyMDAsCiAgICAgIG1lc3NhZ2U6ICLmk43kvZzmiJDlip8iLAogICAgICBkYXRhOiBkYXRhLnNsaWNlKHN0YXJ0TnVtIC0gMSwgZW5kTnVtKSwKICAgICAgdG90YWw6IHRvdGFsCiAgICB9OwogIH0sCiAgLy8g5qC55o2u55So5oi3SUTojrflj5bnlKjmiLfor6bmg4UKICBnZXRVc2VyQnlJZDogZnVuY3Rpb24gZ2V0VXNlckJ5SWQoY29uZmlnKSB7CiAgICB2YXIgcGFyYW1ldGVyID0gSlNPTi5wYXJzZShjb25maWcuYm9keSk7CiAgICB2YXIgdXNlckluZm8gPSB1c2VyTGlzdC5maWx0ZXIoZnVuY3Rpb24gKGl0ZW0pIHsKICAgICAgcmV0dXJuIGl0ZW0uaWQgPT0gcGFyYW1ldGVyLnVzZXJpZDsKICAgIH0pWzBdOwogICAgcmV0dXJuIHsKICAgICAgc3RhdHVzOiAyMDAsCiAgICAgIG1lc3NhZ2U6ICLmk43kvZzmiJDlip8iLAogICAgICBkYXRhOiB1c2VySW5mbwogICAgfTsKICB9LAogIC8vIOaWsOWinueUqOaItwogIGFkZFVzZXI6IGZ1bmN0aW9uIGFkZFVzZXIoY29uZmlnKSB7CiAgICB2YXIgcGFyYW1ldGVyID0gSlNPTi5wYXJzZShjb25maWcuYm9keSk7CiAgICBwYXJhbWV0ZXIuaWQgPSBNb2NrLlJhbmRvbS5ndWlkKCk7CiAgICBwYXJhbWV0ZXIuYWRkciA9IE1vY2subW9jaygnQGNvdW50eSh0cnVlKScpOwogICAgcGFyYW1ldGVyLmVtYWlsID0gTW9jay5SYW5kb20uZW1haWwoKTsKICAgIHBhcmFtZXRlci5hdmF0YXIgPSAiaW1nL3R4LmdpZiI7CiAgICBwYXJhbWV0ZXIuc3RhdGUgPSB0cnVlOwogICAgdXNlckxpc3QudW5zaGlmdChwYXJhbWV0ZXIpOwogICAgcmV0dXJuIHsKICAgICAgc3RhdHVzOiAyMDAsCiAgICAgIG1lc3NhZ2U6ICLmlrDlop7miJDlip8iLAogICAgICBkYXRhOiAiIgogICAgfTsKICB9LAogIC8vIOe8lui+keeUqOaIt+S/oeaBrwogIGVkaXRVc2VyOiBmdW5jdGlvbiBlZGl0VXNlcihjb25maWcpIHsKICAgIHZhciBwYXJhbWV0ZXIgPSBKU09OLnBhcnNlKGNvbmZpZy5ib2R5KTsKICAgIHVzZXJMaXN0Lm1hcChmdW5jdGlvbiAoaXRlbSwgaW5kZXgpIHsKICAgICAgaWYgKGl0ZW0uaWQgPT0gcGFyYW1ldGVyLmlkKSB7CiAgICAgICAgdXNlckxpc3Quc3BsaWNlKGluZGV4LCAxLCBwYXJhbWV0ZXIpOwogICAgICB9CiAgICB9KTsKICAgIHJldHVybiB7CiAgICAgIHN0YXR1czogMjAwLAogICAgICBtZXNzYWdlOiAi57yW6L6R5oiQ5YqfIiwKICAgICAgZGF0YTogIiIKICAgIH07CiAgfSwKICAvLyDliKDpmaTnlKjmiLcKICBkZWxldGVVc2VyOiBmdW5jdGlvbiBkZWxldGVVc2VyKGNvbmZpZykgewogICAgdmFyIHBhcmFtZXRlciA9IEpTT04ucGFyc2UoY29uZmlnLmJvZHkpOwoKICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdXNlckxpc3QubGVuZ3RoOyBpKyspIHsKICAgICAgaWYgKHVzZXJMaXN0W2ldLmlkID09IHBhcmFtZXRlci5pZCkgewogICAgICAgIHVzZXJMaXN0LnNwbGljZShpLCAxKTsKICAgICAgICBicmVhazsKICAgICAgfQogICAgfQoKICAgIHJldHVybiB7CiAgICAgIHN0YXR1czogMjAwLAogICAgICBtZXNzYWdlOiAi5Yig6Zmk5oiQ5YqfIiwKICAgICAgZGF0YTogIiIKICAgIH07CiAgfSwKICAvLyDkv67mlLnlr4bnoIEKICBtb2RpZnlQd2Q6IGZ1bmN0aW9uIG1vZGlmeVB3ZChjb25maWcpIHsKICAgIHZhciBwYXJhbWV0ZXIgPSBKU09OLnBhcnNlKGNvbmZpZy5ib2R5KTsKICAgIHZhciBzdGF0dXMgPSAyMDAsCiAgICAgICAgbWVzc2FnZSA9ICLlr4bnoIHkv67mlLnmiJDlip8iOwogICAgdmFyIHVzZXJJbmZvID0gdXNlckxpc3QuZmlsdGVyKGZ1bmN0aW9uIChpdGVtKSB7CiAgICAgIHJldHVybiBpdGVtLmlkID09IHBhcmFtZXRlci51c2VySWQ7CiAgICB9KVswXTsKCiAgICBpZiAodXNlckluZm8ucGFzc3dvcmQgPT0gcGFyYW1ldGVyLm9sZFB3ZCkgewogICAgICB1c2VySW5mby5wYXNzd29yZCA9IHBhcmFtZXRlci5uZXdQd2Q7CiAgICB9IGVsc2UgewogICAgICBzdGF0dXMgPSAyMDE7CiAgICAgIG1lc3NhZ2UgPSAi5Y6f5a+G56CB5LiN5q2j56GuIjsKICAgIH0KCiAgICByZXR1cm4gewogICAgICBzdGF0dXM6IHN0YXR1cywKICAgICAgbWVzc2FnZTogbWVzc2FnZSwKICAgICAgZGF0YTogIiIKICAgIH07CiAgfQp9Ow=="},{"version":3,"sources":["C:/Users/Administrator/Desktop/1/预见未来后台管理系统/后台/src/mock/user.js"],"names":["Mock","getUrlParam","userListData","rolePermissionsData","userList","rolePermissions","getUserInfo","config","data","JSON","parse","body","userInfo","filter","item","username","token","roles","console","log","roleMenu","i","length","operateList","key","chilKey","menuOper","push","Array","from","Set","status","message","getUserList","parameter","url","indexOf","total","startNum","currentPage","pageSize","endNum","slice","getUserById","id","userid","addUser","Random","guid","addr","mock","email","avatar","state","unshift","editUser","map","index","splice","deleteUser","modifyPwd","userId","password","oldPwd","newPwd"],"mappings":"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","sourcesContent":["import Mock from 'mockjs'\nimport {\n\tgetUrlParam\n} from '@/utils/index'\nimport {\n\tuserListData,\n\trolePermissionsData\n} from '@/utils/data'\nlet userList = userListData();\nlet rolePermissions = rolePermissionsData();\n\nexport default {\n\t// 获取用户详情\n\tgetUserInfo: config => {\n\t\tlet data = JSON.parse(config.body);\n\t\tlet userInfo = userList.filter(item => (item.username + \"-accessToken\") == data.token)[0];\n\t\t// 根据用户的角色获取操作\n\t\tlet roles = userInfo.roles; //角色数组\n\t\tconsole.log(roles);\n\t\tlet roleMenu = {};\n\t\tfor (let i = 0; i < roles.length; i++) {\n\t\t\troleMenu = {\n\t\t\t\t...roleMenu,\n\t\t\t\t...rolePermissions[roles[i]]\n\t\t\t}\n\t\t}\n\t\tlet operateList = [];\n\t\tfor (let key in roleMenu) {\n\t\t\tfor (let chilKey in roleMenu[key]) {\n\t\t\t\tif (roleMenu[key][chilKey].length) {\n\t\t\t\t\tlet menuOper = roleMenu[key][chilKey];\n\t\t\t\t\tfor (let i = 0; i < menuOper.length; i++) {\n\t\t\t\t\t\toperateList.push(chilKey + menuOper[i])\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\toperateList = Array.from(new Set(operateList));\n\t\tuserInfo[\"operateList\"] = operateList;\n\t\t// console.log(\"用户详情\", JSON.parse(JSON.stringify(userInfo)));\n\t\treturn {\n\t\t\tstatus: 200,\n\t\t\tmessage: \"操作成功\",\n\t\t\tdata: userInfo\n\t\t}\n\t},\n\t// 获取用户列表\n\tgetUserList: config => {\n\t\tlet parameter = getUrlParam(config.url);\n\t\tlet data = userList.filter(item => (item.username.indexOf(parameter.username) != -1) &&\n\t\t\t(parameter.roles ? (item.roles.indexOf(parameter.roles) != -1) : true));\n\t\tlet total = data.length;\n\t\tlet startNum = (parameter.currentPage - 1) * parameter.pageSize + 1;\n\t\tlet endNum = parameter.currentPage * parameter.pageSize;\n\t\treturn {\n\t\t\tstatus: 200,\n\t\t\tmessage: \"操作成功\",\n\t\t\tdata: data.slice(startNum - 1, endNum),\n\t\t\ttotal: total,\n\t\t}\n\t},\n\t// 根据用户ID获取用户详情\n\tgetUserById: config => {\n\t\tlet parameter = JSON.parse(config.body);\n\t\tlet userInfo = userList.filter(item => item.id == parameter.userid)[0]\n\t\treturn {\n\t\t\tstatus: 200,\n\t\t\tmessage: \"操作成功\",\n\t\t\tdata: userInfo\n\t\t}\n\t},\n\t// 新增用户\n\taddUser: config => {\n\t\tlet parameter = JSON.parse(config.body);\n\t\tparameter.id = Mock.Random.guid();\n\t\tparameter.addr = Mock.mock('@county(true)');\n\t\tparameter.email = Mock.Random.email();\n\t\tparameter.avatar = \"img/tx.gif\";\n\t\tparameter.state = true;\n\t\tuserList.unshift(parameter);\n\t\treturn {\n\t\t\tstatus: 200,\n\t\t\tmessage: \"新增成功\",\n\t\t\tdata: \"\"\n\t\t}\n\t},\n\t// 编辑用户信息\n\teditUser: config => {\n\t\tlet parameter = JSON.parse(config.body);\n\t\tuserList.map((item, index) => {\n\t\t\tif (item.id == parameter.id) {\n\t\t\t\tuserList.splice(index, 1, parameter);\n\t\t\t}\n\t\t})\n\t\treturn {\n\t\t\tstatus: 200,\n\t\t\tmessage: \"编辑成功\",\n\t\t\tdata: \"\"\n\t\t}\n\t},\n\t// 删除用户\n\tdeleteUser: config => {\n\t\tlet parameter = JSON.parse(config.body);\n\t\tfor (let i = 0; i < userList.length; i++) {\n\t\t\tif (userList[i].id == parameter.id) {\n\t\t\t\tuserList.splice(i, 1);\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t\treturn {\n\t\t\tstatus: 200,\n\t\t\tmessage: \"删除成功\",\n\t\t\tdata: \"\"\n\t\t}\n\t},\n\t// 修改密码\n\tmodifyPwd: config => {\n\t\tlet parameter = JSON.parse(config.body);\n\t\tlet status = 200,\n\t\t\tmessage = \"密码修改成功\";\n\t\tlet userInfo = userList.filter(item => item.id == parameter.userId)[0]\n\t\tif (userInfo.password == parameter.oldPwd) {\n\t\t\tuserInfo.password = parameter.newPwd;\n\t\t} else {\n\t\t\tstatus = 201;\n\t\t\tmessage = \"原密码不正确\";\n\t\t}\n\t\treturn {\n\t\t\tstatus: status,\n\t\t\tmessage: message,\n\t\t\tdata: \"\"\n\t\t}\n\t}\n}"]}]}