{"remainingRequest":"C:\\Users\\dell\\Desktop\\个人\\实例后台\\后台\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\dell\\Desktop\\个人\\实例后台\\后台\\src\\mock\\user.js","dependencies":[{"path":"C:\\Users\\dell\\Desktop\\个人\\实例后台\\后台\\src\\mock\\user.js","mtime":1668146349982},{"path":"C:\\Users\\dell\\Desktop\\个人\\实例后台\\后台\\babel.config.js","mtime":1646805521000},{"path":"C:\\Users\\dell\\Desktop\\个人\\实例后台\\后台\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\dell\\Desktop\\个人\\实例后台\\后台\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiQzovVXNlcnMvZGVsbC9EZXNrdG9wL1x1NEUyQVx1NEVCQS9cdTVCOUVcdTRGOEJcdTU0MEVcdTUzRjAvXHU1NDBFXHU1M0YwL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RTcHJlYWQyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmZyb20uanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuaXRlcmF0b3IuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zZXQuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLml0ZXJhdG9yLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc2xpY2UuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5tYXAuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5zcGxpY2UuanMiOwppbXBvcnQgTW9jayBmcm9tICdtb2NranMnOwppbXBvcnQgeyBnZXRVcmxQYXJhbSB9IGZyb20gJ0AvdXRpbHMvaW5kZXgnOwppbXBvcnQgeyB1c2VyTGlzdERhdGEsIHJvbGVQZXJtaXNzaW9uc0RhdGEgfSBmcm9tICdAL3V0aWxzL2RhdGEnOwp2YXIgdXNlckxpc3QgPSB1c2VyTGlzdERhdGEoKTsKdmFyIHJvbGVQZXJtaXNzaW9ucyA9IHJvbGVQZXJtaXNzaW9uc0RhdGEoKTsKZXhwb3J0IGRlZmF1bHQgewogIC8vIOiOt+WPlueUqOaIt+ivpuaDhQogIGdldFVzZXJJbmZvOiBmdW5jdGlvbiBnZXRVc2VySW5mbyhjb25maWcpIHsKICAgIHZhciBkYXRhID0gSlNPTi5wYXJzZShjb25maWcuYm9keSk7CiAgICB2YXIgdXNlckluZm8gPSB1c2VyTGlzdC5maWx0ZXIoZnVuY3Rpb24gKGl0ZW0pIHsKICAgICAgcmV0dXJuIGl0ZW0udXNlcm5hbWUgKyAiLWFjY2Vzc1Rva2VuIiA9PSBkYXRhLnRva2VuOwogICAgfSlbMF07IC8vIOagueaNrueUqOaIt+eahOinkuiJsuiOt+WPluaTjeS9nAoKICAgIHZhciByb2xlcyA9IHVzZXJJbmZvLnJvbGVzOyAvL+inkuiJsuaVsOe7hAoKICAgIGNvbnNvbGUubG9nKHJvbGVzKTsKICAgIHZhciByb2xlTWVudSA9IHt9OwoKICAgIGZvciAodmFyIGkgPSAwOyBpIDwgcm9sZXMubGVuZ3RoOyBpKyspIHsKICAgICAgcm9sZU1lbnUgPSBfb2JqZWN0U3ByZWFkKF9vYmplY3RTcHJlYWQoe30sIHJvbGVNZW51KSwgcm9sZVBlcm1pc3Npb25zW3JvbGVzW2ldXSk7CiAgICB9CgogICAgdmFyIG9wZXJhdGVMaXN0ID0gW107CgogICAgZm9yICh2YXIga2V5IGluIHJvbGVNZW51KSB7CiAgICAgIGZvciAodmFyIGNoaWxLZXkgaW4gcm9sZU1lbnVba2V5XSkgewogICAgICAgIGlmIChyb2xlTWVudVtrZXldW2NoaWxLZXldLmxlbmd0aCkgewogICAgICAgICAgdmFyIG1lbnVPcGVyID0gcm9sZU1lbnVba2V5XVtjaGlsS2V5XTsKCiAgICAgICAgICBmb3IgKHZhciBfaSA9IDA7IF9pIDwgbWVudU9wZXIubGVuZ3RoOyBfaSsrKSB7CiAgICAgICAgICAgIG9wZXJhdGVMaXN0LnB1c2goY2hpbEtleSArIG1lbnVPcGVyW19pXSk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9CiAgICB9CgogICAgb3BlcmF0ZUxpc3QgPSBBcnJheS5mcm9tKG5ldyBTZXQob3BlcmF0ZUxpc3QpKTsKICAgIHVzZXJJbmZvWyJvcGVyYXRlTGlzdCJdID0gb3BlcmF0ZUxpc3Q7IC8vIGNvbnNvbGUubG9nKCLnlKjmiLfor6bmg4UiLCBKU09OLnBhcnNlKEpTT04uc3RyaW5naWZ5KHVzZXJJbmZvKSkpOwoKICAgIHJldHVybiB7CiAgICAgIHN0YXR1czogMjAwLAogICAgICBtZXNzYWdlOiAi5pON5L2c5oiQ5YqfIiwKICAgICAgZGF0YTogdXNlckluZm8KICAgIH07CiAgfSwKICAvLyDojrflj5bnlKjmiLfliJfooagKICBnZXRVc2VyTGlzdDogZnVuY3Rpb24gZ2V0VXNlckxpc3QoY29uZmlnKSB7CiAgICB2YXIgcGFyYW1ldGVyID0gZ2V0VXJsUGFyYW0oY29uZmlnLnVybCk7CiAgICB2YXIgZGF0YSA9IHVzZXJMaXN0LmZpbHRlcihmdW5jdGlvbiAoaXRlbSkgewogICAgICByZXR1cm4gaXRlbS51c2VybmFtZS5pbmRleE9mKHBhcmFtZXRlci51c2VybmFtZSkgIT0gLTEgJiYgKHBhcmFtZXRlci5yb2xlcyA/IGl0ZW0ucm9sZXMuaW5kZXhPZihwYXJhbWV0ZXIucm9sZXMpICE9IC0xIDogdHJ1ZSk7CiAgICB9KTsKICAgIHZhciB0b3RhbCA9IGRhdGEubGVuZ3RoOwogICAgdmFyIHN0YXJ0TnVtID0gKHBhcmFtZXRlci5jdXJyZW50UGFnZSAtIDEpICogcGFyYW1ldGVyLnBhZ2VTaXplICsgMTsKICAgIHZhciBlbmROdW0gPSBwYXJhbWV0ZXIuY3VycmVudFBhZ2UgKiBwYXJhbWV0ZXIucGFnZVNpemU7CiAgICByZXR1cm4gewogICAgICBzdGF0dXM6IDIwMCwKICAgICAgbWVzc2FnZTogIuaTjeS9nOaIkOWKnyIsCiAgICAgIGRhdGE6IGRhdGEuc2xpY2Uoc3RhcnROdW0gLSAxLCBlbmROdW0pLAogICAgICB0b3RhbDogdG90YWwKICAgIH07CiAgfSwKICAvLyDmoLnmja7nlKjmiLdJROiOt+WPlueUqOaIt+ivpuaDhQogIGdldFVzZXJCeUlkOiBmdW5jdGlvbiBnZXRVc2VyQnlJZChjb25maWcpIHsKICAgIHZhciBwYXJhbWV0ZXIgPSBKU09OLnBhcnNlKGNvbmZpZy5ib2R5KTsKICAgIHZhciB1c2VySW5mbyA9IHVzZXJMaXN0LmZpbHRlcihmdW5jdGlvbiAoaXRlbSkgewogICAgICByZXR1cm4gaXRlbS5pZCA9PSBwYXJhbWV0ZXIudXNlcmlkOwogICAgfSlbMF07CiAgICByZXR1cm4gewogICAgICBzdGF0dXM6IDIwMCwKICAgICAgbWVzc2FnZTogIuaTjeS9nOaIkOWKnyIsCiAgICAgIGRhdGE6IHVzZXJJbmZvCiAgICB9OwogIH0sCiAgLy8g5paw5aKe55So5oi3CiAgYWRkVXNlcjogZnVuY3Rpb24gYWRkVXNlcihjb25maWcpIHsKICAgIHZhciBwYXJhbWV0ZXIgPSBKU09OLnBhcnNlKGNvbmZpZy5ib2R5KTsKICAgIHBhcmFtZXRlci5pZCA9IE1vY2suUmFuZG9tLmd1aWQoKTsKICAgIHBhcmFtZXRlci5hZGRyID0gTW9jay5tb2NrKCdAY291bnR5KHRydWUpJyk7CiAgICBwYXJhbWV0ZXIuZW1haWwgPSBNb2NrLlJhbmRvbS5lbWFpbCgpOwogICAgcGFyYW1ldGVyLmF2YXRhciA9ICJpbWcvdHguZ2lmIjsKICAgIHBhcmFtZXRlci5zdGF0ZSA9IHRydWU7CiAgICB1c2VyTGlzdC51bnNoaWZ0KHBhcmFtZXRlcik7CiAgICByZXR1cm4gewogICAgICBzdGF0dXM6IDIwMCwKICAgICAgbWVzc2FnZTogIuaWsOWinuaIkOWKnyIsCiAgICAgIGRhdGE6ICIiCiAgICB9OwogIH0sCiAgLy8g57yW6L6R55So5oi35L+h5oGvCiAgZWRpdFVzZXI6IGZ1bmN0aW9uIGVkaXRVc2VyKGNvbmZpZykgewogICAgdmFyIHBhcmFtZXRlciA9IEpTT04ucGFyc2UoY29uZmlnLmJvZHkpOwogICAgdXNlckxpc3QubWFwKGZ1bmN0aW9uIChpdGVtLCBpbmRleCkgewogICAgICBpZiAoaXRlbS5pZCA9PSBwYXJhbWV0ZXIuaWQpIHsKICAgICAgICB1c2VyTGlzdC5zcGxpY2UoaW5kZXgsIDEsIHBhcmFtZXRlcik7CiAgICAgIH0KICAgIH0pOwogICAgcmV0dXJuIHsKICAgICAgc3RhdHVzOiAyMDAsCiAgICAgIG1lc3NhZ2U6ICLnvJbovpHmiJDlip8iLAogICAgICBkYXRhOiAiIgogICAgfTsKICB9LAogIC8vIOWIoOmZpOeUqOaItwogIGRlbGV0ZVVzZXI6IGZ1bmN0aW9uIGRlbGV0ZVVzZXIoY29uZmlnKSB7CiAgICB2YXIgcGFyYW1ldGVyID0gSlNPTi5wYXJzZShjb25maWcuYm9keSk7CgogICAgZm9yICh2YXIgaSA9IDA7IGkgPCB1c2VyTGlzdC5sZW5ndGg7IGkrKykgewogICAgICBpZiAodXNlckxpc3RbaV0uaWQgPT0gcGFyYW1ldGVyLmlkKSB7CiAgICAgICAgdXNlckxpc3Quc3BsaWNlKGksIDEpOwogICAgICAgIGJyZWFrOwogICAgICB9CiAgICB9CgogICAgcmV0dXJuIHsKICAgICAgc3RhdHVzOiAyMDAsCiAgICAgIG1lc3NhZ2U6ICLliKDpmaTmiJDlip8iLAogICAgICBkYXRhOiAiIgogICAgfTsKICB9LAogIC8vIOS/ruaUueWvhueggQogIG1vZGlmeVB3ZDogZnVuY3Rpb24gbW9kaWZ5UHdkKGNvbmZpZykgewogICAgdmFyIHBhcmFtZXRlciA9IEpTT04ucGFyc2UoY29uZmlnLmJvZHkpOwogICAgdmFyIHN0YXR1cyA9IDIwMCwKICAgICAgICBtZXNzYWdlID0gIuWvhueggeS/ruaUueaIkOWKnyI7CiAgICB2YXIgdXNlckluZm8gPSB1c2VyTGlzdC5maWx0ZXIoZnVuY3Rpb24gKGl0ZW0pIHsKICAgICAgcmV0dXJuIGl0ZW0uaWQgPT0gcGFyYW1ldGVyLnVzZXJJZDsKICAgIH0pWzBdOwoKICAgIGlmICh1c2VySW5mby5wYXNzd29yZCA9PSBwYXJhbWV0ZXIub2xkUHdkKSB7CiAgICAgIHVzZXJJbmZvLnBhc3N3b3JkID0gcGFyYW1ldGVyLm5ld1B3ZDsKICAgIH0gZWxzZSB7CiAgICAgIHN0YXR1cyA9IDIwMTsKICAgICAgbWVzc2FnZSA9ICLljp/lr4bnoIHkuI3mraPnoa4iOwogICAgfQoKICAgIHJldHVybiB7CiAgICAgIHN0YXR1czogc3RhdHVzLAogICAgICBtZXNzYWdlOiBtZXNzYWdlLAogICAgICBkYXRhOiAiIgogICAgfTsKICB9Cn07"},{"version":3,"sources":["C:/Users/dell/Desktop/个人/实例后台/后台/src/mock/user.js"],"names":["Mock","getUrlParam","userListData","rolePermissionsData","userList","rolePermissions","getUserInfo","config","data","JSON","parse","body","userInfo","filter","item","username","token","roles","console","log","roleMenu","i","length","operateList","key","chilKey","menuOper","push","Array","from","Set","status","message","getUserList","parameter","url","indexOf","total","startNum","currentPage","pageSize","endNum","slice","getUserById","id","userid","addUser","Random","guid","addr","mock","email","avatar","state","unshift","editUser","map","index","splice","deleteUser","modifyPwd","userId","password","oldPwd","newPwd"],"mappings":"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","sourcesContent":["import Mock from 'mockjs'\nimport {\n\tgetUrlParam\n} from '@/utils/index'\nimport {\n\tuserListData,\n\trolePermissionsData\n} from '@/utils/data'\nlet userList = userListData();\nlet rolePermissions = rolePermissionsData();\n\nexport default {\n\t// 获取用户详情\n\tgetUserInfo: config => {\n\t\tlet data = JSON.parse(config.body);\n\t\tlet userInfo = userList.filter(item => (item.username + \"-accessToken\") == data.token)[0];\n\t\t// 根据用户的角色获取操作\n\t\tlet roles = userInfo.roles; //角色数组\n\t\tconsole.log(roles);\n\t\tlet roleMenu = {};\n\t\tfor (let i = 0; i < roles.length; i++) {\n\t\t\troleMenu = {\n\t\t\t\t...roleMenu,\n\t\t\t\t...rolePermissions[roles[i]]\n\t\t\t}\n\t\t}\n\t\tlet operateList = [];\n\t\tfor (let key in roleMenu) {\n\t\t\tfor (let chilKey in roleMenu[key]) {\n\t\t\t\tif (roleMenu[key][chilKey].length) {\n\t\t\t\t\tlet menuOper = roleMenu[key][chilKey];\n\t\t\t\t\tfor (let i = 0; i < menuOper.length; i++) {\n\t\t\t\t\t\toperateList.push(chilKey + menuOper[i])\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\toperateList = Array.from(new Set(operateList));\n\t\tuserInfo[\"operateList\"] = operateList;\n\t\t// console.log(\"用户详情\", JSON.parse(JSON.stringify(userInfo)));\n\t\treturn {\n\t\t\tstatus: 200,\n\t\t\tmessage: \"操作成功\",\n\t\t\tdata: userInfo\n\t\t}\n\t},\n\t// 获取用户列表\n\tgetUserList: config => {\n\t\tlet parameter = getUrlParam(config.url);\n\t\tlet data = userList.filter(item => (item.username.indexOf(parameter.username) != -1) &&\n\t\t\t(parameter.roles ? (item.roles.indexOf(parameter.roles) != -1) : true));\n\t\tlet total = data.length;\n\t\tlet startNum = (parameter.currentPage - 1) * parameter.pageSize + 1;\n\t\tlet endNum = parameter.currentPage * parameter.pageSize;\n\t\treturn {\n\t\t\tstatus: 200,\n\t\t\tmessage: \"操作成功\",\n\t\t\tdata: data.slice(startNum - 1, endNum),\n\t\t\ttotal: total,\n\t\t}\n\t},\n\t// 根据用户ID获取用户详情\n\tgetUserById: config => {\n\t\tlet parameter = JSON.parse(config.body);\n\t\tlet userInfo = userList.filter(item => item.id == parameter.userid)[0]\n\t\treturn {\n\t\t\tstatus: 200,\n\t\t\tmessage: \"操作成功\",\n\t\t\tdata: userInfo\n\t\t}\n\t},\n\t// 新增用户\n\taddUser: config => {\n\t\tlet parameter = JSON.parse(config.body);\n\t\tparameter.id = Mock.Random.guid();\n\t\tparameter.addr = Mock.mock('@county(true)');\n\t\tparameter.email = Mock.Random.email();\n\t\tparameter.avatar = \"img/tx.gif\";\n\t\tparameter.state = true;\n\t\tuserList.unshift(parameter);\n\t\treturn {\n\t\t\tstatus: 200,\n\t\t\tmessage: \"新增成功\",\n\t\t\tdata: \"\"\n\t\t}\n\t},\n\t// 编辑用户信息\n\teditUser: config => {\n\t\tlet parameter = JSON.parse(config.body);\n\t\tuserList.map((item, index) => {\n\t\t\tif (item.id == parameter.id) {\n\t\t\t\tuserList.splice(index, 1, parameter);\n\t\t\t}\n\t\t})\n\t\treturn {\n\t\t\tstatus: 200,\n\t\t\tmessage: \"编辑成功\",\n\t\t\tdata: \"\"\n\t\t}\n\t},\n\t// 删除用户\n\tdeleteUser: config => {\n\t\tlet parameter = JSON.parse(config.body);\n\t\tfor (let i = 0; i < userList.length; i++) {\n\t\t\tif (userList[i].id == parameter.id) {\n\t\t\t\tuserList.splice(i, 1);\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t\treturn {\n\t\t\tstatus: 200,\n\t\t\tmessage: \"删除成功\",\n\t\t\tdata: \"\"\n\t\t}\n\t},\n\t// 修改密码\n\tmodifyPwd: config => {\n\t\tlet parameter = JSON.parse(config.body);\n\t\tlet status = 200,\n\t\t\tmessage = \"密码修改成功\";\n\t\tlet userInfo = userList.filter(item => item.id == parameter.userId)[0]\n\t\tif (userInfo.password == parameter.oldPwd) {\n\t\t\tuserInfo.password = parameter.newPwd;\n\t\t} else {\n\t\t\tstatus = 201;\n\t\t\tmessage = \"原密码不正确\";\n\t\t}\n\t\treturn {\n\t\t\tstatus: status,\n\t\t\tmessage: message,\n\t\t\tdata: \"\"\n\t\t}\n\t}\n}"]}]}