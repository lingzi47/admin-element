{"remainingRequest":"C:\\Users\\Administrator\\Desktop\\后台\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Administrator\\Desktop\\后台\\src\\views\\index\\center.vue?vue&type=style&index=0&id=1b02b6f4&lang=scss&scoped=true&","dependencies":[{"path":"C:\\Users\\Administrator\\Desktop\\后台\\src\\views\\index\\center.vue","mtime":1669886680609},{"path":"C:\\Users\\Administrator\\Desktop\\后台\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\后台\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\后台\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\后台\\node_modules\\sass-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\后台\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\后台\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKI215ZGl2IHsKICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoIi4vLi4vLi4vYXNzZXRzL+iDjOaZry5wbmciKTsKICB3aWR0aDogMTAwJTsKICBoZWlnaHQ6IDEwMCU7CiAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDsKICBiYWNrZ3JvdW5kLXNpemU6IDEwMCUgMTAwJTsKfQoudG9wIHsKICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgcG9zaXRpb246IHJlbGF0aXZlOwogIHRvcDogMjBweDsKfQojbWFwIHsKICBwb3NpdGlvbjogcmVsYXRpdmU7Cn0KI2ltZ2JnIHsKICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgdG9wOiA4MHB4OwogIGxlZnQ6IDEwMDBweDsKfQouaW1nIHsKICB3aWR0aDogMTAwJTsKfQo="},{"version":3,"sources":["center.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"center.vue","sourceRoot":"src/views/index","sourcesContent":["<template>\n  <div id=\"mydiv\">\n    <div class=\"top\">\n      <el-row>\n        <el-col :span=\"6\">设备数量</el-col>\n        <el-col :span=\"6\">合作点位</el-col>\n        <el-col :span=\"6\">合作物业</el-col>\n        <el-col :span=\"6\">辐射人口</el-col>\n      </el-row>\n      <el-row>\n        <el-col :span=\"6\">320</el-col>\n        <el-col :span=\"6\">630</el-col>\n        <el-col :span=\"6\">7</el-col>\n        <el-col :span=\"6\">62587</el-col>\n      </el-row>\n    </div>\n    <div id=\"map\" style=\"height: 610px; width: 100%\" ref=\"myEchart\"></div>\n    <img src=\"./../../assets/ce.png\" id=\"imgbg\" />\n  </div>\n</template>\n<script>\nimport * as echarts from \"echarts\";\nimport henanJson from \"../../assets/shen.json\";\nimport { property } from \"@/request/api\";\nexport default {\n  name: \"DisplayDraw\",\n  data() {\n    return {\n      data: [],\n    };\n  },\n  mounted() {\n    this.init();\n  },\n  methods: {\n    init(data) {\n      let params = {};\n      property(params).then((res) => {\n        console.log(res.data.list1, \"ditu\");\n        let myChart = echarts.init(document.getElementById(\"map\"));\n        echarts.registerMap(\"henan\", henanJson);\n        let option = {\n          title: {\n            text: \"\",\n            left: \"center\",\n          },\n          tooltip: {\n            trigger: \"item\",\n            formatter: function (params) {\n              if (!params.value) {\n                return \"城市信息\" + \"<br />\" + params.name;\n              }\n              console.log(params);\n              console.log(params.name);\n              console.log(params.address);\n              console.log(params.num);\n              return (\n                \"点位信息\" +\n                \"<br />\" +\n                \"小区\" +\n                \"：\" +\n                params.data.property +\n                \"<br />\" +\n                \"地址\" +\n                \"：\" +\n                params.data.name +\n                \"<br />\" +\n                \"设备数量\" +\n                \"：\" +\n                params.data.num +\n                \"台\"\n              );\n            },\n            confine: true,\n            backgroundColor: \"#0d142f\", //标题背景色\n            borderWidth: 1,\n            borderColor: \"#02eeef\", //边框颜色\n            textStyle: {\n              color: \"#fff\",\n\n              fontSize: 13,\n            },\n          },\n          //地理坐标系组件。地理坐标系组件用于地图的绘制，支持在地理坐标系上绘制散点图，线集。\n          geo: {\n            map: \"henan\",\n            show: false,\n            roam: true,\n            label: {\n              emphasis: {\n                show: true, //开启悬浮事件\n              },\n            },\n          },\n\n          series: [\n            //地图\n            {\n              name: \"\",\n              type: \"map\",\n              // zoom: 1.4,\n              label: {\n                show: false,\n              },\n              mapType: \"henan\", // 自定义扩展图表类型\n              // 地图区域的样式设置\n              itemStyle: {\n                emphasis: {\n                  // 鼠标放上去高亮的样式\n                  // emphasis: {\n                  areaColor: \"#0984e3\",\n                  borderWidth: 0,\n                  // },\n                  borderColor: \"#2378f7\", // 图形的描边颜色 #2378f7\n                  // borderWidth: \"1\",\n                  // areaColor: \"#233F53\", // 阴影色 #233F53\n                  label: {\n                    show: false,\n                    textStyle: {\n                      color: \"#fff\",\n                      fontSize: 14,\n                    },\n                  },\n                },\n\n                normal: {\n                  borderColor: \"#0AAEB0\", // 图形的描边颜色 #0AAEB0\n                  borderWidth: 1, // 描边线宽。\n                  borderType: \"solid\", // 柱条的描边类型。\n                  areaColor: \"#233F53\", // 图形的颜色 #233F53\n                  shadowBlur: 5, // 图形阴影的模糊大小。\n                  shadowColor: \"#233F53\", // 阴影色 #233F53\n                  shadowOffsetX: 5, // X轴阴影\n                  shadowOffsetY: 5, // Y轴阴影\n\n                  label: {\n                    show: true, // 显示区域名称// 显示区域名称// 显示区域名称// 显示区域名称\n                    textStyle: {\n                      color: \"#fff\",\n                      fontSize: 12,\n                    },\n                  },\n                },\n              },\n              data: [],\n            },\n            //待安装\n            {\n              type: \"effectScatter\",\n              coordinateSystem: \"geo\", // 使用地理坐标系\n              // 要有对应的经纬度才显示，先经度再维度\n              data: res.data.list2,\n              showEffectOn: \"render\", // 绘制完成后显示特效\n              hoverAnimation: true,\n              label: {\n                // 图形上的文本标签\n                show: true,\n                formatter: \"{b}\",\n                position: \"top\",\n              },\n              symbol: \"image://\" + require(\"./../../assets/img/点1.png\"), // 自定义图片路径\n              symbolSize: [20, 20], // 图片大小\n              // 默认样式\n              itemStyle: {\n                color: \"transparent\",\n                shadowBlur: 10,\n                shadowColor: \"#333\",\n              },\n              zlevel: 1,\n            },\n            //已安装\n            {\n              type: \"effectScatter\",\n              coordinateSystem: \"geo\", // 使用地理坐标系\n              // 要有对应的经纬度才显示，先经度再维度\n              data: res.data.list1,\n              showEffectOn: \"render\", // 绘制完成后显示特效\n              hoverAnimation: true,\n              label: {\n                // 图形上的文本标签\n                show: true,\n                formatter: \"{b}\",\n                position: \"top\",\n              },\n              symbol: \"image://\" + require(\"./../../assets/img/点2.png\"), // 自定义图片路径\n              symbolSize: [20, 20], // 图片大小\n              // 默认样式\n              itemStyle: {\n                color: \"transparent\",\n                shadowBlur: 10,\n                shadowColor: \"#333\",\n              },\n              zlevel: 2,\n            },\n            //带核验\n            {\n              type: \"effectScatter\",\n              coordinateSystem: \"geo\", // 使用地理坐标系\n              // 要有对应的经纬度才显示，先经度再维度\n              data: res.data.list3,\n              showEffectOn: \"render\", // 绘制完成后显示特效\n              hoverAnimation: true,\n              label: {\n                // 图形上的文本标签\n                show: true,\n                formatter: \"{b}\",\n                position: \"top\",\n              },\n              symbol: \"image://\" + require(\"./../../assets/img/点3.png\"), // 自定义图片路径\n              symbolSize: [20, 20], // 图片大小\n              // 默认样式\n              itemStyle: {\n                color: \"transparent\",\n                shadowBlur: 10,\n                shadowColor: \"#333\",\n              },\n              zlevel: 3,\n            },\n          ],\n        };\n        myChart.setOption(option);\n        window.addEventListener(\"resize\", function () {\n          myChart.resize();\n        });\n      });\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n#mydiv {\n  background-image: url(\"./../../assets/背景.png\");\n  width: 100%;\n  height: 100%;\n  background-repeat: no-repeat;\n  background-size: 100% 100%;\n}\n.top {\n  text-align: center;\n  position: relative;\n  top: 20px;\n}\n#map {\n  position: relative;\n}\n#imgbg {\n  position: absolute;\n  top: 80px;\n  left: 1000px;\n}\n.img {\n  width: 100%;\n}\n</style>\n"]}]}