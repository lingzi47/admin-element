{"remainingRequest":"C:\\Users\\Administrator\\Desktop\\后台\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Administrator\\Desktop\\后台\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\Users\\Administrator\\Desktop\\后台\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Administrator\\Desktop\\后台\\src\\views\\user\\bgaccountset\\bgaccount\\components\\addOrEditDialog.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Administrator\\Desktop\\后台\\src\\views\\user\\bgaccountset\\bgaccount\\components\\addOrEditDialog.vue","mtime":1670315634811},{"path":"C:\\Users\\Administrator\\Desktop\\后台\\babel.config.js","mtime":1646805521000},{"path":"C:\\Users\\Administrator\\Desktop\\后台\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\后台\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\Administrator\\Desktop\\后台\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\后台\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["addOrEditDialog.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6GA,SACA,SADA,EAEA,OAFA,EAGA,QAHA,EAIA,QAJA,EAKA,SALA,QAMA,eANA;AAOA,eAAA;AACA,EAAA,IAAA,EAAA,WADA;AAEA,EAAA,UAAA,EAAA,EAFA;AAGA,EAAA,IAHA,kBAGA;AACA,WAAA;AACA,MAAA,EAAA,EAAA,EADA;AAEA,MAAA,SAAA,EAAA,KAFA;AAGA,MAAA,WAAA,EAAA,SAHA;AAIA,MAAA,OAAA,EAAA,IAJA;AAKA,MAAA,KAAA,EAAA,EALA;AAMA,MAAA,SAAA,EAAA,EANA;AAMA;AACA,MAAA,IAAA,EAAA,CAPA;AAOA;AACA,MAAA,aAAA,EAAA,KARA;AASA,MAAA,IAAA,EAAA,EATA;AAUA,MAAA,QAAA,EAAA;AACA,QAAA,EAAA,EAAA,EADA;AAEA,QAAA,QAAA,EAAA,EAFA;AAGA,QAAA,GAAA,EAAA,EAHA;AAIA,QAAA,IAAA,EAAA,EAJA;AAKA,QAAA,KAAA,EAAA,EALA;AAMA,QAAA,GAAA,EAAA,EANA;AAOA,QAAA,SAAA,EAAA;AAPA,OAVA;AAmBA,MAAA,KAAA,EAAA;AACA,QAAA,KAAA,EAAA,CACA;AAAA,UAAA,QAAA,EAAA,IAAA;AAAA,UAAA,OAAA,EAAA,QAAA;AAAA,UAAA,OAAA,EAAA;AAAA,SADA,CADA;AAKA,QAAA,GAAA,EAAA,CACA;AAAA,UAAA,QAAA,EAAA,IAAA;AAAA,UAAA,OAAA,EAAA,QAAA;AAAA,UAAA,OAAA,EAAA;AAAA,SADA,CALA;AASA,QAAA,QAAA,EAAA,CACA;AAAA,UAAA,QAAA,EAAA,IAAA;AAAA,UAAA,OAAA,EAAA,QAAA;AAAA,UAAA,OAAA,EAAA;AAAA,SADA,CATA;AAaA,QAAA,GAAA,EAAA,CACA;AAAA,UAAA,QAAA,EAAA,IAAA;AAAA,UAAA,OAAA,EAAA,SAAA;AAAA,UAAA,OAAA,EAAA;AAAA,SADA,EAEA;AACA,UAAA,OAAA,EAAA,mBADA;AAEA,UAAA,OAAA,EAAA,UAFA;AAGA,UAAA,OAAA,EAAA;AAHA,SAFA,CAbA;AAqBA,QAAA,IAAA,EAAA,CAAA;AAAA,UAAA,QAAA,EAAA,IAAA;AAAA,UAAA,OAAA,EAAA,SAAA;AAAA,UAAA,OAAA,EAAA;AAAA,SAAA;AArBA,OAnBA;AA0CA,MAAA,SAAA,EAAA;AACA;AACA,QAAA,YAFA,wBAEA,IAFA,EAEA;AACA,iBAAA,IAAA,CAAA,OAAA,KAAA,IAAA,CAAA,GAAA,EAAA;AACA;AAJA;AA1CA,KAAA;AAiDA,GArDA;AAsDA,EAAA,OAAA,EAAA,mBAAA;AACA,SAAA,YAAA,GADA,CACA;;AACA,QAAA,KAAA,IAAA,IAAA,CAAA,EAAA;AACA,WAAA,WAAA;AACA;AACA,GA3DA;AA4DA,EAAA,OAAA,EAAA,mBAAA,CAAA,CA5DA;AA6DA,EAAA,OAAA,EAAA;AACA,IAAA,SADA,uBACA;AAAA;;AACA;AACA,WAAA,KAAA,GAAA,WAAA,CAAA,YAAA;AACA;AACA,QAAA,KAAA,CAAA,WAAA,cAAA,KAAA,CAAA,OAAA;AACA,QAAA,KAAA,CAAA,OAAA;;AACA,YAAA,KAAA,CAAA,OAAA,GAAA,CAAA,EAAA;AACA;AACA,UAAA,aAAA,CAAA,KAAA,CAAA,KAAA,CAAA;;AACA,UAAA,KAAA,CAAA,KAAA;AACA;AACA,OATA,EASA,IATA,CAAA;AAUA,KAbA;AAcA,IAAA,GAdA,iBAcA;AAAA;;AACA,UACA,CAAA,+EAAA,IAAA,CACA,KAAA,QAAA,CAAA,GADA,CADA,EAIA;AACA,aAAA,QAAA,CAAA;AACA,UAAA,OAAA,EAAA,UADA;AAEA,UAAA,IAAA,EAAA;AAFA,SAAA;AAIA,eAAA,KAAA;AACA,OAXA,CAYA;;;AACA,UAAA,KAAA,QAAA,CAAA,GAAA,CAAA,MAAA,KAAA,EAAA,EAAA;AACA,aAAA,QAAA,CAAA;AACA,UAAA,OAAA,EAAA,WADA;AAEA,UAAA,IAAA,EAAA;AAFA,SAAA;AAIA,eAAA,KAAA;AACA;;AACA,UAAA,MAAA,GAAA;AACA,QAAA,KAAA,EAAA,KAAA,QAAA,CAAA;AADA,OAAA;AAGA,MAAA,SAAA,CAAA,MAAA,CAAA,CAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,YAAA,GAAA,CAAA,IAAA,CAAA,IAAA,IAAA,GAAA,EAAA;AACA,UAAA,OAAA,CAAA,GAAA,CAAA,GAAA,CAAA,IAAA,CAAA,IAAA;AACA,UAAA,MAAA,CAAA,IAAA,GAAA,GAAA,CAAA,IAAA,CAAA,IAAA;AACA,UAAA,MAAA,CAAA,SAAA,GAAA,IAAA,CAHA,CAIA;;AACA,UAAA,MAAA,CAAA,SAAA,GALA,CAKA;;;AACA,UAAA,MAAA,CAAA,QAAA,CAAA,OAAA,CAAA,GAAA,CAAA,IAAA,CAAA,GAAA;AACA,SAPA,MAOA;AACA,UAAA,MAAA,CAAA,QAAA,CAAA,KAAA,CAAA,GAAA,CAAA,IAAA,CAAA,GAAA;AACA;AACA,OAXA,EAvBA,CAoCA;AACA;AACA;AACA,KArDA;AAsDA,IAAA,KAtDA,mBAsDA;AACA;AACA,WAAA,SAAA,GAAA,KAAA,CAFA,CAGA;;AACA,WAAA,WAAA,GAAA,SAAA;;AACA,UAAA,KAAA,KAAA,EAAA;AACA;AACA,QAAA,aAAA,CAAA,KAAA,KAAA,CAAA,CAFA,CAGA;;AACA,aAAA,OAAA,GAAA,EAAA,CAJA,CAKA;;AACA,aAAA,KAAA,GAAA,IAAA;AACA;AACA,KAnEA;AAoEA;AACA,IAAA,WArEA,yBAqEA,CAAA,CArEA;AAsEA;AACA,IAAA,YAvEA,0BAuEA;AAAA;;AACA,UAAA,KAAA,GAAA,cAAA,CAAA,OAAA,CAAA,OAAA,CAAA;AACA,WAAA,KAAA,GAAA,KAAA;AACA,UAAA,MAAA,GAAA;AACA,QAAA,KAAA,EAAA,cAAA,CAAA,OAAA,CAAA,OAAA;AADA,OAAA;AAGA,MAAA,SAAA,CAAA,MAAA,CAAA,CAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,QAAA,MAAA,CAAA,SAAA,GAAA,GAAA,CAAA,IAAA,CAAA,IAAA;AACA,OAFA;AAGA,KAhFA;AAiFA,IAAA,IAjFA,gBAiFA,IAjFA,EAiFA,GAjFA,EAiFA;AAAA;;AACA,WAAA,IAAA,GAAA,IAAA;AACA,WAAA,aAAA,GAAA,IAAA;;AACA,UAAA,IAAA,IAAA,CAAA,EAAA;AACA,aAAA,QAAA,GAAA,GAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,GAAA;AACA,YAAA,EAAA,GAAA,KAAA,QAAA,CAAA,EAAA;AACA,aAAA,EAAA,GAAA,EAAA;AACA,YAAA,MAAA,GAAA;AACA,UAAA,KAAA,EAAA,cAAA,CAAA,OAAA,CAAA,OAAA;AADA,SAAA;AAGA,QAAA,QAAA,CAAA,MAAA,EAAA,EAAA,CAAA,CAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,UAAA,MAAA,CAAA,QAAA,GAAA,GAAA,CAAA,IAAA,CAAA,IAAA;AACA,UAAA,OAAA,CAAA,GAAA,CAAA,MAAA,CAAA,QAAA;AACA,UAAA,MAAA,CAAA,QAAA,CAAA,SAAA,GAAA,GAAA,CAAA,IAAA,CAAA,IAAA,CAAA,GAAA;AACA,SAJA;AAKA,OAbA,MAaA;AACA,aAAA,QAAA,GAAA;AACA,UAAA,EAAA,EAAA,EADA;AAEA,UAAA,QAAA,EAAA,EAFA;AAGA,UAAA,GAAA,EAAA,EAHA;AAIA,UAAA,KAAA,EAAA,EAJA;AAKA,UAAA,GAAA,EAAA,EALA;AAMA,UAAA,SAAA,EAAA;AANA,SAAA;AAQA;AACA,KA3GA;AA4GA,IAAA,KA5GA,mBA4GA;AAAA;;AACA,WAAA,aAAA,GAAA,KAAA;AACA,WAAA,SAAA,CAAA,YAAA;AACA,QAAA,MAAA,CAAA,KAAA,CAAA,QAAA,CAAA,aAAA,GADA,CACA;;AACA,OAFA;AAGA,KAjHA;AAmHA,IAAA,UAnHA,wBAmHA;AAAA;;AACA,WAAA,KAAA,CAAA,QAAA,CAAA,QAAA;AAAA,2EAAA,iBAAA,KAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,uBACA,KADA;AAAA;AAAA;AAAA;;AAAA,wBAEA,MAAA,CAAA,IAAA,KAAA,MAAA,CAAA,QAAA,CAAA,IAFA;AAAA;AAAA;AAAA;;AAGA,kBAAA,MAAA,CAAA,QAAA,CAAA;AACA,oBAAA,OAAA,EAAA,UADA;AAEA,oBAAA,IAAA,EAAA;AAFA,mBAAA;;AAHA,mDAOA,KAPA;;AAAA;AASA,sBAAA,MAAA,CAAA,IAAA,IAAA,CAAA,EAAA;AACA,oBAAA,KADA,GACA,cAAA,CAAA,OAAA,CAAA,OAAA,CADA;AAEA,oBAAA,MAAA,CAAA,KAAA,GAAA,KAAA;AACA,oBAAA,MAHA,GAGA;AACA,sBAAA,KAAA,EAAA,cAAA,CAAA,OAAA,CAAA,OAAA,CADA;AAEA,sBAAA,QAAA,EAAA,MAAA,CAAA,QAAA,CAAA,QAFA;AAGA,sBAAA,KAAA,EAAA,MAAA,CAAA,QAAA,CAAA,KAHA;AAIA,sBAAA,GAAA,EAAA,MAAA,CAAA,QAAA,CAAA,GAJA;AAKA,sBAAA,GAAA,EAAA,MAAA,CAAA,QAAA,CAAA,GALA;AAMA,sBAAA,MAAA,EAAA,CANA;AAOA,sBAAA,SAAA,EAAA,MAAA,CAAA,QAAA,CAAA,SAPA;AAQA,sBAAA,IAAA,EAAA,MAAA,CAAA,QAAA,CAAA;AARA,qBAHA;AAaA,oBAAA,OAAA,CAAA,MAAA,CAAA,CAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,0BAAA,GAAA,CAAA,IAAA,CAAA,IAAA,IAAA,GAAA,EAAA;AACA,wBAAA,MAAA,CAAA,QAAA,CAAA,OAAA,CAAA,MAAA;;AACA,wBAAA,MAAA,CAAA,OAAA,CAAA,WAAA;;AACA,wBAAA,MAAA,CAAA,KAAA;AACA,uBAJA,MAIA;AACA,wBAAA,MAAA,CAAA,QAAA,CAAA,KAAA,CAAA,GAAA,CAAA,IAAA,CAAA,GAAA;;AACA,wBAAA,MAAA,CAAA,OAAA,CAAA,WAAA;;AACA,wBAAA,MAAA,CAAA,KAAA;AACA;AACA,qBAVA;AAWA,mBAxBA,MAwBA;AACA,oBAAA,MADA,GACA,cAAA,CAAA,OAAA,CAAA,OAAA,CADA;AAEA,oBAAA,MAAA,CAAA,KAAA,GAAA,MAAA;AACA,oBAAA,EAHA,GAGA,MAAA,CAAA,EAHA;AAIA,oBAAA,OAJA,GAIA;AACA,sBAAA,KAAA,EAAA,cAAA,CAAA,OAAA,CAAA,OAAA,CADA;AAEA,sBAAA,MAAA,EAAA,CAFA;AAGA,sBAAA,QAAA,EAAA,MAAA,CAAA,QAAA,CAAA,QAHA;AAIA,sBAAA,KAAA,EAAA,MAAA,CAAA,QAAA,CAAA,KAJA;AAKA,sBAAA,GAAA,EAAA,MAAA,CAAA,QAAA,CAAA,GALA;AAMA,sBAAA,IAAA,EAAA,MAAA,CAAA,QAAA,CAAA,IANA;AAOA,sBAAA,GAAA,EAAA,MAAA,CAAA,QAAA,CAAA,GAPA;AAQA,sBAAA,SAAA,EAAA,MAAA,CAAA,QAAA,CAAA;AARA,qBAJA;AAeA,oBAAA,QAAA,CAAA,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,0BAAA,GAAA,CAAA,IAAA,CAAA,IAAA,IAAA,GAAA,EAAA;AACA,wBAAA,MAAA,CAAA,QAAA,CAAA,OAAA,CAAA,MAAA;;AAEA,wBAAA,MAAA,CAAA,OAAA,CAAA,WAAA;;AACA,wBAAA,MAAA,CAAA,KAAA;AACA,uBALA,MAKA;AACA,wBAAA,MAAA,CAAA,QAAA,CAAA,KAAA,CAAA,GAAA,CAAA,IAAA,CAAA,GAAA;;AACA,wBAAA,MAAA,CAAA,OAAA,CAAA,WAAA;;AACA,wBAAA,MAAA,CAAA,KAAA;AACA;AACA,qBAXA;AAYA;;AACA,kBAAA,MAAA,CAAA,OAAA,CAAA,WAAA;;AACA,kBAAA,MAAA,CAAA,KAAA;;AA9DA;AAAA;;AAAA;AAAA,mDAgEA,KAhEA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAA;;AAAA;AAAA;AAAA;AAAA;AAmEA;AAvLA;AA7DA,CAAA","sourcesContent":["<template>\n  <div class=\"AddDialog\">\n    <el-dialog\n      :title=\"type == 1 ? '新增' : '编辑'\"\n      :visible.sync=\"dialogVisible\"\n      width=\"800px\"\n      :close-on-click-modal=\"false\"\n      @close=\"close\"\n    >\n      <el-form\n        :model=\"ruleForm\"\n        ref=\"ruleForm\"\n        :rules=\"rules\"\n        label-width=\"auto\"\n      >\n        <el-input type=\"hidden\" v-model=\"ruleForm.id\"></el-input>\n        <el-row :gutter=\"20\">\n          <el-col :span=\"12\">\n            <el-form-item label=\"账号\" prop=\"uname\">\n              <el-input\n                v-model=\"ruleForm.uname\"\n                placeholder=\"请输入账号\"\n              ></el-input>\n            </el-form-item>\n          </el-col>\n          <el-col :span=\"12\">\n            <el-form-item label=\"密码\" prop=\"pwd\">\n              <el-input\n                v-model=\"ruleForm.pwd\"\n                placeholder=\"请输入密码\"\n              ></el-input>\n            </el-form-item>\n          </el-col>\n          <el-col :span=\"12\">\n            <el-form-item label=\"姓名\" prop=\"nickname\">\n              <el-input\n                v-model=\"ruleForm.nickname\"\n                placeholder=\"请输入姓名\"\n              ></el-input>\n            </el-form-item>\n          </el-col>\n\n          <!-- <el-col :span=\"12\">\n            <el-form-item label=\"账号状态\" prop=\"state\">\n              <el-switch\n                v-model=\"ruleForm.state\"\n                active-text=\"启用\"\n                inactive-text=\"禁用\"\n              ></el-switch>\n            </el-form-item>\n          </el-col> -->\n\n          <el-col :span=\"12\">\n            <el-form-item\n              label=\"角色\"\n              prop=\"role_name\"\n              :rules=\"[\n                { required: true, message: '角色不能为空', trigger: 'blur' },\n              ]\"\n            >\n              <el-select\n                v-model=\"ruleForm.role_name\"\n                clearable\n                placeholder=\"请选择角色\"\n              >\n                <el-option\n                  v-for=\"item in rolesList\"\n                  :value=\"item.id\"\n                  :label=\"item.role_name\"\n                  :key=\"item.id\"\n                ></el-option>\n              </el-select>\n            </el-form-item>\n          </el-col>\n          <el-col :span=\"12\">\n            <el-form-item label=\"手机号\" prop=\"tel\">\n              <el-input\n                v-model=\"ruleForm.tel\"\n                placeholder=\"请输入手机号\"\n              ></el-input>\n              <el-button\n                style=\"margin-left: 180px\"\n                size=\"small\"\n                type=\"warning\"\n                @click=\"yan\"\n                :disabled=\"isSmsSend\"\n                >{{ sendBtnText }}</el-button\n              >\n            </el-form-item>\n          </el-col>\n          <el-col :span=\"12\">\n            <el-form-item label=\"验证码\" prop=\"code\">\n              <el-input\n                v-model=\"ruleForm.code\"\n                placeholder=\"请输入验证码\"\n              ></el-input>\n            </el-form-item>\n          </el-col>\n        </el-row>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"dialogVisible = false\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"submitForm\">确 定</el-button>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport {\n  userRoles,\n  addUser,\n  editShow,\n  editUser,\n  phoneCode,\n} from \"@/request/api\";\nexport default {\n  name: \"AddDialog\",\n  components: {},\n  data() {\n    return {\n      id: \"\",\n      isSmsSend: false,\n      sendBtnText: \"点击发送验证码\",\n      counter: \"60\",\n      token: \"\",\n      rolesList: [], //角色列表\n      type: 1, //1新增，2编辑\n      dialogVisible: false,\n      code: \"\",\n      ruleForm: {\n        id: \"\",\n        nickname: \"\",\n        pwd: \"\",\n        code: \"\",\n        uname: \"\",\n        tel: \"\",\n        role_name: \"\",\n      },\n      rules: {\n        uname: [\n          { required: true, message: \"账号不能为空\", trigger: \"blur\" },\n        \n        ],\n        pwd: [\n          { required: true, message: \"密码不能为空\", trigger: \"blur\" },\n        \n        ],\n        nickname: [\n          { required: true, message: \"姓名不能为空\", trigger: \"blur\" },\n         \n        ],\n        tel: [\n          { required: true, message: \"手机号不能为空\", trigger: \"blur\" },\n          {\n            pattern: /^1[3456789]\\d{9}$/,\n            message: \"手机号格式不正确\",\n            trigger: \"blur\",\n          },\n        ],\n        code: [{ required: true, message: \"验证码不能为空\", trigger: \"blur\" }],\n      },\n      rangeDate: {\n        //日期范围选择，只能选择当前日期以前的\n        disabledDate(date) {\n          return date.getTime() > Date.now();\n        },\n      },\n    };\n  },\n  created: function () {\n    this.getRolesList(); //获取角色\n    if (this.type == 2) {\n      this.getUserEdit();\n    }\n  },\n  mounted: function () {},\n  methods: {\n    countDown() {\n      // 将setInterval()方法赋值给前面定义的timer计时器对象，等用clearInterval()方法时方便清空这个计时器对象\n      this.timer = setInterval(() => {\n        // 替换文本，用es6里面的``这个来创建字符串模板，让秒实时改变\n        this.sendBtnText = `(${this.counter}秒)后重新发送`;\n        this.counter--;\n        if (this.counter < 0) {\n          // 当计时小于零时，取消该计时器\n          clearInterval(this.timer);\n          this.reset();\n        }\n      }, 1000);\n    },\n    yan() {\n      if (\n        !/^(13[0-9]|14[01456879]|15[0-35-9]|16[2567]|17[0-8]|18[0-9]|19[0-35-9])\\d{8}$/.test(\n          this.ruleForm.tel\n        )\n      ) {\n        this.$message({\n          message: \"请输入正确手机号\",\n          type: \"error\",\n        });\n        return false;\n      }\n      // 判断手机号是否符合要求\n      if (this.ruleForm.tel.length !== 11) {\n        this.$message({\n          message: \"请输入11位手机号\",\n          type: \"error\",\n        });\n        return false;\n      }\n      let params = {\n        phone: this.ruleForm.tel,\n      };\n      phoneCode(params).then((res) => {\n        if (res.data.code == 200) {\n          console.log(res.data.date);\n          this.code = res.data.date;\n          this.isSmsSend = true;\n          // 开始倒计时，60s之后才能再次点击\n          this.countDown(); // 这里实现倒计时的功能，文章下面开始介绍\n          this.$message.success(res.data.msg);\n        } else {\n          this.$message.error(res.data.msg);\n        }\n      });\n\n      // 调用接口，发送短信验证码\n      // 这部分放调用发送短信的接口，这里先不做任何功能，主要先把按钮倒计时的功能实现\n      // 将按钮禁用，防止再次点击\n    },\n    reset() {\n      // 重置按钮可用\n      this.isSmsSend = false;\n      // 重置文本内容\n      this.sendBtnText = \"点击发送验证码\";\n      if (this.timer) {\n        // 存在计时器对象，则清除\n        clearInterval(this.timer);\n        // 重置秒数，防止下次混乱\n        this.counter = 60;\n        // 计时器对象重置为空\n        this.timer = null;\n      }\n    },\n    //获取修改的信息\n    getUserEdit() {},\n    //获取角色组\n    getRolesList() {\n      let token = sessionStorage.getItem(\"token\");\n      this.token = token;\n      let params = {\n        token: sessionStorage.getItem(\"token\"),\n      };\n      userRoles(params).then((res) => {\n        this.rolesList = res.data.data;\n      });\n    },\n    show(type, row) {\n      this.type = type;\n      this.dialogVisible = true;\n      if (type == 2) {\n        this.ruleForm = row;\n        console.log(row);\n        let id = this.ruleForm.id;\n        this.id = id;\n        let params = {\n          token: sessionStorage.getItem(\"token\"),\n        };\n        editShow(params, id).then((res) => {\n          this.ruleForm = res.data.data;\n          console.log(this.ruleForm);\n          this.ruleForm.role_name = res.data.data.rid;\n        });\n      } else {\n        this.ruleForm = {\n          id: \"\",\n          nickname: \"\",\n          pwd: \"\",\n          uname: \"\",\n          tel: \"\",\n          role_name: \"\",\n        };\n      }\n    },\n    close() {\n      this.dialogVisible = false;\n      this.$nextTick(() => {\n        this.$refs.ruleForm.clearValidate(); //关闭清空校验规则\n      });\n    },\n\n    submitForm() {\n      this.$refs.ruleForm.validate(async (valid) => {\n        if (valid) {\n          if (this.code !== this.ruleForm.code) {\n            this.$message({\n              message: \"请输入正确验证码\",\n              type: \"error\",\n            });\n            return false;\n          }\n          if (this.type == 1) {\n            let token = sessionStorage.getItem(\"token\");\n            this.token = token;\n            let params = {\n              token: sessionStorage.getItem(\"token\"),\n              nickname: this.ruleForm.nickname,\n              uname: this.ruleForm.uname,\n              tel: this.ruleForm.tel,\n              pwd: this.ruleForm.pwd,\n              u_type: 1,\n              role_name: this.ruleForm.role_name,\n              code: this.ruleForm.code,\n            };\n            addUser(params).then((res) => {\n              if (res.data.code == 200) {\n                this.$message.success(\"新增成功\");\n                this.$parent.getUserList();\n                this.close();\n              } else {\n                this.$message.error(res.data.msg);\n                this.$parent.getUserList();\n                this.close();\n              }\n            });\n          } else {\n            let token = sessionStorage.getItem(\"token\");\n            this.token = token;\n            let id = this.id;\n            let params = {\n              token: sessionStorage.getItem(\"token\"),\n              u_type: 1,\n              nickname: this.ruleForm.nickname,\n              uname: this.ruleForm.uname,\n              tel: this.ruleForm.tel,\n              code: this.ruleForm.code,\n              pwd: this.ruleForm.pwd,\n              role_name: this.ruleForm.role_name,\n            };\n\n            editUser(params, id).then((res) => {\n              if (res.data.code == 200) {\n                this.$message.success(\"编辑成功\");\n\n                this.$parent.getUserList();\n                this.close();\n              } else {\n                this.$message.error(res.data.msg);\n                this.$parent.getUserList();\n                this.close();\n              }\n            });\n          }\n          this.$parent.getUserList();\n          this.close();\n        } else {\n          return false;\n        }\n      });\n    },\n  },\n};\n</script>\n\n<style>\n</style>\n"],"sourceRoot":"src/views/user/bgaccountset/bgaccount/components"}]}