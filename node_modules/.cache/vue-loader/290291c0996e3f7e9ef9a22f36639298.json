{"remainingRequest":"C:\\Users\\Administrator\\Desktop\\预见未来后台管理系统\\后台\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Administrator\\Desktop\\预见未来后台管理系统\\后台\\src\\views\\user\\powermanage\\bguserlist\\components\\setRole.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Administrator\\Desktop\\预见未来后台管理系统\\后台\\src\\views\\user\\powermanage\\bguserlist\\components\\setRole.vue","mtime":1658821717945},{"path":"C:\\Users\\Administrator\\Desktop\\预见未来后台管理系统\\后台\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\预见未来后台管理系统\\后台\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\预见未来后台管理系统\\后台\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\Administrator\\Desktop\\预见未来后台管理系统\\后台\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\预见未来后台管理系统\\后台\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IG1lbnVMaXN0LCBhZGRVc2VybWVudSwgVXNlcm1lbnVzaG93IH0gZnJvbSAiQC9yZXF1ZXN0L2FwaSI7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAic2V0Um9sZSIsCiAgY29tcG9uZW50czoge30sCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGlkOiAiIiwKICAgICAgbV9pZDogIiIsCiAgICAgIGRlZmF1bHRQcm9wczogewogICAgICAgIGNoaWxkcmVuOiAiY2hpbGRyZW4iLAogICAgICAgIGxhYmVsOiAibV9uYW1lIiwKICAgICAgfSwKICAgICAgZHJhd2VyOiBmYWxzZSwKICAgICAgcm9sZUluZm86IHt9LAogICAgICB0cmVlTWVudTogW10sCiAgICAgIG1pZGFycjogW10sCiAgICAgIHRyZWVDaGVja2VkS2V5czogW10sCiAgICB9OwogIH0sCiAgY3JlYXRlZCgpIHsKICAgIC8vY29uc29sZS5sb2codGhpcy50cmVlTWVudSk7CiAgfSwKICBtb3VudGVkKCkge30sCiAgbWV0aG9kczogewogICAgZ2V0Tm9kZSh0cmVlTWVudSkgewogICAgICBjb25zb2xlLmxvZyh0cmVlTWVudSk7CiAgICB9LAogICAgc2hvdyhyb3cpIHsKICAgICAgdGhpcy5yb2xlSW5mbyA9IHJvdzsKICAgICAgY29uc29sZS5sb2coInJvdyIsIHRoaXMucm9sZUluZm8pOwogICAgICAvL2NvbnNvbGUubG9nKHJvdy5pZCk7CiAgICAgIHRoaXMuaWQgPSByb3cuaWQ7CiAgICAgIHRoaXMuZ2V0TWVudU9wZXJhdGUoKTsKICAgICAgdGhpcy5Vc2VybWVudXNob3coKTsKICAgIH0sCgogICAgY2xvc2UoKSB7CiAgICAgIHRoaXMuJHJlZnMubWVudVRyZWUuc2V0Q2hlY2tlZEtleXMoW10pOwogICAgfSwKICAgIFVzZXJtZW51c2hvdygpIHsKICAgICAgbGV0IGlkID0gdGhpcy5pZDsKICAgICAgbGV0IHBhcmFtcyA9IHsKICAgICAgICB0b2tlbjogc2Vzc2lvblN0b3JhZ2UuZ2V0SXRlbSgidG9rZW4iKSwKICAgICAgfTsKICAgICAgVXNlcm1lbnVzaG93KHBhcmFtcywgaWQpLnRoZW4oKHJlcykgPT4gewogICAgICAgIC8vY29uc29sZS5sb2cocmVzLmRhdGEuZGF0YS5tX2lkKTsKCiAgICAgICAgdGhpcy50cmVlQ2hlY2tlZEtleXMgPSByZXMuZGF0YS5kYXRhLm1faWQuc3BsaXQoIiwiKTsKICAgICAgICAvLyBsZXQgbWlkID0gcmVzLmRhdGEuZGF0YS5tX2lkOwogICAgICAgIC8vIHRoaXMubWlkYXJyLnB1c2gobWlkKTsKICAgICAgICAvLyAvL+WQjuerr+i/lOWbnueahOaJgOaciWlkCiAgICAgICAgLy8gY29uc29sZS5sb2codGhpcy5taWRhcnIpOwogICAgICAgIC8vIHZhciB0aGF0ID0gdGhpczsKICAgICAgICAvLyB0aGlzLm1pZGFyci5mb3JFYWNoKChpLCBuKSA9PiB7CiAgICAgICAgLy8gICB2YXIgbm9kZSA9IHRoYXQuJHJlZnMubWVudVRyZWUuZ2V0Tm9kZShpKTsKICAgICAgICAvLyAgIGNvbnNvbGUubG9nKG5vZGUuaXNMZWFmKTsKICAgICAgICAvLyAgIGlmIChub2RlLmlzTGVhZikgewogICAgICAgIC8vICAgICB0aGF0LiRyZWZzLm1lbnVUcmVlLnNldENoZWNrZWQobm9kZSwgdHJ1ZSk7CiAgICAgICAgLy8gICB9CiAgICAgICAgLy8gfSk7CgogICAgICAgIC8vIGNvbnNvbGUubG9nKCJpZOe7hCDlrZfnrKbkuLIiLCB0aGlzLm1pZCk7CiAgICAgICAgLy8gY29uc29sZS5sb2coImlk57uEIOaVsOe7hCIsIHRoaXMudHJlZUNoZWNrZWRLZXlzKTsKICAgICAgfSk7CiAgICB9LAoKICAgIGNoYW5nZVJvbGUoKSB7CiAgICAgIGxldCBpZCA9IHRoaXMuaWQ7CiAgICAgIGxldCBwYXJhbXMgPSB7CiAgICAgICAgdG9rZW46IHNlc3Npb25TdG9yYWdlLmdldEl0ZW0oInRva2VuIiksCiAgICAgICAgbV9pZDogdGhpcy5tX2lkLAogICAgICB9OwogICAgICBhZGRVc2VybWVudShwYXJhbXMsIGlkKS50aGVuKChyZXMpID0+IHsKICAgICAgICBpZiAocmVzLnN0YXR1cyA9PSAyMDApIHsKICAgICAgICAgIHRoaXMuJG1lc3NhZ2Uuc3VjY2Vzcygi5p2D6ZmQ6K6+572u5oiQ5YqfIik7CiAgICAgICAgICB0aGlzLmRyYXdlciA9IGZhbHNlOwogICAgICAgIH0KICAgICAgfSk7CiAgICB9LAoKICAgIGdldE1lbnVPcGVyYXRlKCkgewogICAgICBsZXQgcGFyYW1zID0gewogICAgICAgIHRva2VuOiBzZXNzaW9uU3RvcmFnZS5nZXRJdGVtKCJ0b2tlbiIpLAogICAgICB9OwogICAgICBtZW51TGlzdChwYXJhbXMpLnRoZW4oKHJlcykgPT4gewogICAgICAgIHRoaXMudHJlZU1lbnUgPSByZXMuZGF0YS5kYXRhOwogICAgICAgIC8vY29uc29sZS5sb2codGhpcy50cmVlTWVudSk7CiAgICAgICAgdGhpcy5kcmF3ZXIgPSB0cnVlOwogICAgICB9KTsKICAgIH0sCgogICAgLy8g6IqC54K56KKr54K55Ye7CiAgICBjaGVja0NoYW5nZShkYXRhLCBjaGVja2VkKSB7CiAgICAgIGNvbnNvbGUubG9nKAogICAgICAgIHRoaXMuJHJlZnMubWVudVRyZWUKICAgICAgICAgIC5nZXRDaGVja2VkTm9kZXMoKQogICAgICAgICAgLmNvbmNhdCh0aGlzLiRyZWZzLm1lbnVUcmVlLmdldEhhbGZDaGVja2VkTm9kZXMoKSkKICAgICAgKTsKICAgICAgbGV0IHRyZWVkYXRhID0gdGhpcy4kcmVmcy5tZW51VHJlZQogICAgICAgIC5nZXRDaGVja2VkTm9kZXMoKQogICAgICAgIC5jb25jYXQodGhpcy4kcmVmcy5tZW51VHJlZS5nZXRIYWxmQ2hlY2tlZE5vZGVzKCkpOwogICAgICBsZXQgYXJybmV3ID0gdHJlZWRhdGEKICAgICAgICAubWFwKChvYmosIGluZGV4KSA9PiB7CiAgICAgICAgICByZXR1cm4gb2JqLmlkOwogICAgICAgIH0pCiAgICAgICAgLmpvaW4oIiwiKQogICAgICAgIC5zcGxpdCgiLCIpOwogICAgICBjb25zb2xlLmxvZyhhcnJuZXcpOwogICAgICB2YXIgbV9pZCA9IGFycm5ldy50b1N0cmluZygpOwogICAgICBjb25zb2xlLmxvZygibWlkIiwgbV9pZCk7CiAgICAgIHRoaXMubV9pZCA9IG1faWQ7CiAgICAgIC8vIGxldCBjaGVja2VkS2V5ID0gdGhpcy4kcmVmcy5tZW51VHJlZS5nZXRDaGVja2VkS2V5cygpOwogICAgICAvLyAvL2NvbnNvbGUubG9nKGNoZWNrZWRLZXkpOwogICAgICAvLyBpZiAoY2hlY2tlZCkgewogICAgICAvLyAgIGNvbnNvbGUubG9nKCLlhajpgInmiYDlvpciLCBkYXRhLmlkKTsKICAgICAgLy8gICBsZXQgc2VhcmNoSWQgPSBkYXRhLmlkOwogICAgICAvLyAgIGlmIChjaGVja2VkS2V5LmluZGV4T2Yoc2VhcmNoSWQpID09IC0xKSB7CiAgICAgIC8vICAgICBjaGVja2VkS2V5LnB1c2goc2VhcmNoSWQpOwogICAgICAvLyAgICAgdGhpcy4kcmVmcy5tZW51VHJlZS5zZXRDaGVja2VkS2V5cyhjaGVja2VkS2V5KTsKICAgICAgLy8gICAgIGNvbnNvbGUubG9nKCLojrflj5YiLCB0aGlzLiRyZWZzLm1lbnVUcmVlLnNldENoZWNrZWRLZXlzKGNoZWNrZWRLZXkpKTsKICAgICAgLy8gICB9CiAgICAgIC8vIH0KICAgICAgLy8gZWxzZSB7CiAgICAgIC8vICAgbGV0IHNlYXJjaFBhcklkID0gZGF0YS5pZDsKICAgICAgLy8gICBjb25zb2xlLmxvZygi5Y2K6YCJ5omA5b6XIiwgc2VhcmNoUGFySWQpOwogICAgICAvLyAgIC8vIGNoZWNrZWRLZXkubWFwKChpdGVtKSA9PiB7CiAgICAgIC8vICAgLy8gICBpZiAoaXRlbS5zdWJzdHJpbmcoMCwgNSkgPT0gc2VhcmNoUGFySWQpIHNlYXJjaFBhckZsYWcgPSB0cnVlOwogICAgICAvLyAgIC8vIH0pOwogICAgICAvLyB9CiAgICB9LAogIH0sCn07Cg=="},{"version":3,"sources":["setRole.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgfile":"setRole.vue","sourceRoot":"src/views/user/powermanage/bguserlist/components","sourcesContent":["<template>\n  <div class=\"setRole\">\n    <el-drawer\n      title=\"角色权限设置\"\n      :visible.sync=\"drawer\"\n      direction=\"rtl\"\n      @closed=\"close\"\n      :size=\"900\"\n    >\n      <div class=\"clearflex\">\n        <el-button type=\"primary\" @click=\"changeRole\">确 定</el-button>\n      </div>\n      <el-scrollbar style=\"height: calc(100% - 40px)\">\n        <div class=\"tree-menu\">\n          <el-tree\n            ref=\"menuTree\"\n            :data=\"treeMenu\"\n            :props=\"defaultProps\"\n            show-checkbox\n            :default-expand-all=\"true\"\n            node-key=\"id\"\n            :default-checked-keys=\"treeCheckedKeys\"\n            @check-change=\"checkChange\"\n            @click=\"getNode\"\n          ></el-tree>\n        </div>\n      </el-scrollbar>\n    </el-drawer>\n  </div>\n</template>\n\n<script>\nimport { menuList, addUsermenu, Usermenushow } from \"@/request/api\";\nexport default {\n  name: \"setRole\",\n  components: {},\n  data() {\n    return {\n      id: \"\",\n      m_id: \"\",\n      defaultProps: {\n        children: \"children\",\n        label: \"m_name\",\n      },\n      drawer: false,\n      roleInfo: {},\n      treeMenu: [],\n      midarr: [],\n      treeCheckedKeys: [],\n    };\n  },\n  created() {\n    //console.log(this.treeMenu);\n  },\n  mounted() {},\n  methods: {\n    getNode(treeMenu) {\n      console.log(treeMenu);\n    },\n    show(row) {\n      this.roleInfo = row;\n      console.log(\"row\", this.roleInfo);\n      //console.log(row.id);\n      this.id = row.id;\n      this.getMenuOperate();\n      this.Usermenushow();\n    },\n\n    close() {\n      this.$refs.menuTree.setCheckedKeys([]);\n    },\n    Usermenushow() {\n      let id = this.id;\n      let params = {\n        token: sessionStorage.getItem(\"token\"),\n      };\n      Usermenushow(params, id).then((res) => {\n        //console.log(res.data.data.m_id);\n\n        this.treeCheckedKeys = res.data.data.m_id.split(\",\");\n        // let mid = res.data.data.m_id;\n        // this.midarr.push(mid);\n        // //后端返回的所有id\n        // console.log(this.midarr);\n        // var that = this;\n        // this.midarr.forEach((i, n) => {\n        //   var node = that.$refs.menuTree.getNode(i);\n        //   console.log(node.isLeaf);\n        //   if (node.isLeaf) {\n        //     that.$refs.menuTree.setChecked(node, true);\n        //   }\n        // });\n\n        // console.log(\"id组 字符串\", this.mid);\n        // console.log(\"id组 数组\", this.treeCheckedKeys);\n      });\n    },\n\n    changeRole() {\n      let id = this.id;\n      let params = {\n        token: sessionStorage.getItem(\"token\"),\n        m_id: this.m_id,\n      };\n      addUsermenu(params, id).then((res) => {\n        if (res.status == 200) {\n          this.$message.success(\"权限设置成功\");\n          this.drawer = false;\n        }\n      });\n    },\n\n    getMenuOperate() {\n      let params = {\n        token: sessionStorage.getItem(\"token\"),\n      };\n      menuList(params).then((res) => {\n        this.treeMenu = res.data.data;\n        //console.log(this.treeMenu);\n        this.drawer = true;\n      });\n    },\n\n    // 节点被点击\n    checkChange(data, checked) {\n      console.log(\n        this.$refs.menuTree\n          .getCheckedNodes()\n          .concat(this.$refs.menuTree.getHalfCheckedNodes())\n      );\n      let treedata = this.$refs.menuTree\n        .getCheckedNodes()\n        .concat(this.$refs.menuTree.getHalfCheckedNodes());\n      let arrnew = treedata\n        .map((obj, index) => {\n          return obj.id;\n        })\n        .join(\",\")\n        .split(\",\");\n      console.log(arrnew);\n      var m_id = arrnew.toString();\n      console.log(\"mid\", m_id);\n      this.m_id = m_id;\n      // let checkedKey = this.$refs.menuTree.getCheckedKeys();\n      // //console.log(checkedKey);\n      // if (checked) {\n      //   console.log(\"全选所得\", data.id);\n      //   let searchId = data.id;\n      //   if (checkedKey.indexOf(searchId) == -1) {\n      //     checkedKey.push(searchId);\n      //     this.$refs.menuTree.setCheckedKeys(checkedKey);\n      //     console.log(\"获取\", this.$refs.menuTree.setCheckedKeys(checkedKey));\n      //   }\n      // }\n      // else {\n      //   let searchParId = data.id;\n      //   console.log(\"半选所得\", searchParId);\n      //   // checkedKey.map((item) => {\n      //   //   if (item.substring(0, 5) == searchParId) searchParFlag = true;\n      //   // });\n      // }\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n::v-deep {\n  .el-drawer__body {\n    overflow: auto;\n    overflow-y: hidden;\n  }\n  .el-scrollbar__wrap {\n    overflow-x: hidden;\n  }\n}\n.clearflex {\n  padding: 0 20px;\n  *zoom: 1;\n  text-align: right;\n}\n/deep/ .tree-menu {\n  padding: 20px;\n\n  .custom-tree-node {\n    display: flex;\n    justify-content: space-between;\n    width: 100%;\n    .menu-role {\n      flex: 1;\n      text-align: right;\n    }\n  }\n  .el-tree {\n    .el-tree-node__children {\n      .el-tree-node__children {\n        padding-left: 40px;\n        .el-tree-node {\n          display: inline-block;\n          .el-tree-node__content {\n            padding: 0 20px 0 0 !important;\n          }\n        }\n      }\n    }\n  }\n}\n</style>\n"]}]}