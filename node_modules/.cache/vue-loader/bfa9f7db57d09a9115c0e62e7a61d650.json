{"remainingRequest":"C:\\Users\\Administrator\\Desktop\\后台\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\Administrator\\Desktop\\后台\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\Users\\Administrator\\Desktop\\后台\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Administrator\\Desktop\\后台\\src\\views\\shop\\extend\\spellinglist\\index.vue?vue&type=template&id=535bf1b1&scoped=true&","dependencies":[{"path":"C:\\Users\\Administrator\\Desktop\\后台\\src\\views\\shop\\extend\\spellinglist\\index.vue","mtime":1670292707132},{"path":"C:\\Users\\Administrator\\Desktop\\后台\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\后台\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\后台\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\后台\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}