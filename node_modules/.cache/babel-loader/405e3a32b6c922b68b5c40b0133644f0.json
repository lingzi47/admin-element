{"remainingRequest":"C:\\Users\\Administrator\\Desktop\\后台\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\Administrator\\Desktop\\后台\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Administrator\\Desktop\\后台\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\Users\\Administrator\\Desktop\\后台\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Administrator\\Desktop\\后台\\node_modules\\@jiaminghi\\data-view\\lib\\components\\flylineChartEnhanced\\src\\main.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Administrator\\Desktop\\后台\\node_modules\\@jiaminghi\\data-view\\lib\\components\\flylineChartEnhanced\\src\\main.vue","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\后台\\babel.config.js","mtime":1646805521000},{"path":"C:\\Users\\Administrator\\Desktop\\后台\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\后台\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\后台\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\Administrator\\Desktop\\后台\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\后台\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["main.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyJA,SAAA,SAAA,QAAA,kCAAA;AAEA,SAAA,SAAA,QAAA,qCAAA;AAEA,SAAA,YAAA,EAAA,gBAAA,EAAA,IAAA,QAAA,qBAAA;AAEA,OAAA,UAAA,MAAA,2BAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,wBADA;AAEA,EAAA,MAAA,EAAA,CAAA,UAAA,CAFA;AAGA,EAAA,KAAA,EAAA;AACA,IAAA,MAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAAA,eAAA,EAAA;AAAA;AAFA,KADA;AAKA,IAAA,GAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,OAAA,EAAA;AAFA;AALA,GAHA;AAaA,EAAA,IAbA,kBAaA;AACA,QAAA,EAAA,GAAA,IAAA,EAAA;AACA,WAAA;AACA,MAAA,GAAA,EAAA,2BADA;AAEA,MAAA,MAAA,EAAA,IAAA,CAAA,MAAA,EAFA;AAGA,MAAA,iBAAA,gCAAA,EAAA,CAHA;AAIA,MAAA,cAAA,6BAAA,EAAA,CAJA;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAA,aAAA,EAAA;AACA;AACA;AACA;AACA;AACA;AACA,QAAA,MAAA,EAAA,EANA;;AAOA;AACA;AACA;AACA;AACA;AACA,QAAA,KAAA,EAAA,EAZA;;AAaA;AACA;AACA;AACA;AACA,QAAA,IAAA,EAAA;AACA;AACA;AACA;AACA;AACA;AACA,UAAA,IAAA,EAAA,KANA;;AAOA;AACA;AACA;AACA;AACA,UAAA,QAAA,EAAA,CAAA,EAAA,EAAA,EAAA,CAXA;;AAYA;AACA;AACA;AACA;AACA;AACA,UAAA,KAAA,EAAA,SAjBA;;AAkBA;AACA;AACA;AACA;AACA;AACA,UAAA,MAAA,EAAA;AAvBA,SAjBA;;AA0CA;AACA;AACA;AACA;AACA,QAAA,IAAA,EAAA;AACA;AACA;AACA;AACA;AACA;AACA,UAAA,IAAA,EAAA,KANA;;AAOA;AACA;AACA;AACA;AACA;AACA,UAAA,MAAA,EAAA,CAAA,CAAA,EAAA,EAAA,CAZA;;AAaA;AACA;AACA;AACA;AACA;AACA,UAAA,KAAA,EAAA,SAlBA;;AAmBA;AACA;AACA;AACA;AACA;AACA,UAAA,QAAA,EAAA;AAxBA,SA9CA;;AAwEA;AACA;AACA;AACA;AACA,QAAA,IAAA,EAAA;AACA;AACA;AACA;AACA;AACA;AACA,UAAA,IAAA,EAAA,KANA;;AAOA;AACA;AACA;AACA;AACA;AACA,UAAA,GAAA,EAAA,EAZA;;AAaA;AACA;AACA;AACA;AACA;AACA,UAAA,KAAA,EAAA,EAlBA;;AAmBA;AACA;AACA;AACA;AACA;AACA,UAAA,MAAA,EAAA;AAxBA,SA5EA;;AAsGA;AACA;AACA;AACA;AACA,QAAA,IAAA,EAAA;AACA;AACA;AACA;AACA;AACA;AACA,UAAA,KAAA,EAAA,CANA;;AAOA;AACA;AACA;AACA;AACA;AACA,UAAA,KAAA,EAAA,SAZA;;AAaA;AACA;AACA;AACA;AACA;AACA,UAAA,UAAA,EAAA,yBAlBA;;AAmBA;AACA;AACA;AACA;AACA;AACA,UAAA,QAAA,EAAA,CAAA,EAAA,EAAA,EAAA,CAxBA;;AAyBA;AACA;AACA;AACA;AACA;AACA,UAAA,MAAA,EAAA;AA9BA,SA1GA;;AA0IA;AACA;AACA;AACA;AACA;AACA,QAAA,QAAA,EAAA,EA/IA;;AAgJA;AACA;AACA;AACA;AACA;AACA;AACA,QAAA,CAAA,EAAA,CAAA,GAtJA;;AAuJA;AACA;AACA;AACA;AACA;AACA,QAAA,SAAA,EAAA,CA5JA;;AA6JA;AACA;AACA;AACA;AACA;AACA,QAAA,QAAA,EAAA;AAlKA,OAxDA;;AA4NA;AACA;AACA;AACA;AACA;AACA,MAAA,QAAA,EAAA,EAjOA;;AAkOA;AACA;AACA;AACA;AACA;AACA,MAAA,cAAA,EAAA,EAvOA;;AAwOA;AACA;AACA;AACA;AACA,MAAA,aAAA,EAAA,EA5OA;AA8OA,MAAA,YAAA,EAAA;AA9OA,KAAA;AAgPA,GA/PA;AAgQA,EAAA,KAAA,EAAA;AACA,IAAA,MADA,oBACA;AACA,UAAA,QAAA,GAAA,IAAA,CAAA,QAAA;AAEA,MAAA,QAAA;AACA;AALA,GAhQA;AAuQA,EAAA,OAAA,EAAA;AACA,IAAA,wBADA,sCACA;AACA,UAAA,QAAA,GAAA,IAAA,CAAA,QAAA;AAEA,MAAA,QAAA;AACA,KALA;AAMA,IAAA,QANA,sBAMA;AACA,UAAA,QAAA,GAAA,IAAA,CAAA,QAAA;AAEA,MAAA,QAAA;AACA,KAVA;AAWA,IAAA,QAXA,sBAWA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,gBAAA,WADA,GACA,KADA,CACA,WADA,EACA,iBADA,GACA,KADA,CACA,iBADA,EACA,aADA,GACA,KADA,CACA,aADA;AAGA,gBAAA,WAAA;AAEA,gBAAA,iBAAA;AAEA,gBAAA,aAAA;AAEA,gBAAA,eATA,GASA,KATA,CASA,eATA;AAAA;AAAA,uBAWA,eAAA,EAXA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA,KAvBA;AAwBA,IAAA,WAxBA,yBAwBA;AACA,UAAA,MAAA,GAAA,IAAA,CAAA,MAAA;AAAA,UAAA,aAAA,GAAA,IAAA,CAAA,aAAA;AAEA,UAAA,YAAA,GAAA,SAAA,CAAA,SAAA,CAAA,aeAAA,IAAA;AACA,OANA,CAAA;AAQA,MAAA,YAAA,CAAA,KAAA,GAAA,KAAA,CAAA,GAAA,CAAA,UAAA,IAAA,EAAA;AACA,eAAA,SAAA,CAAA,SAAA,CAAA,IAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA;AACA,OAFA,CAAA;AAIA,WAAA,YAAA,GAAA,YAAA;AACA,KA5CA;AA6CA,IAAA,iBA7CA,+BA6CA;AACA,UAAA,YAAA,GAAA,IAAA,CAAA,YAAA;AAAA,UAAA,KAAA,GAAA,IAAA,CAAA,KAAA;AAAA,UAAA,MAAA,GAAA,IAAA,CAAA,MAAA;AAEA,UAAA,QAAA,GAAA,YAAA,CAAA,QAAA;AAAA,UAAA,MAAA,GAAA,YAAA,CAAA,MAAA;AAEA,WAAA,aAAA,GAAA,MAAA,CAAA,GAAA,CAAA,UAAA,IAAA,EAAA,CAAA,EAAA;AACA,8CAAA,IAAA,CAAA,UAAA;AAAA,YAAA,CAAA;AAAA,YAAA,CAAA;AAAA,YAAA,IAAA,GAAA,IAAA,CAAA,IAAA;AAAA,YAAA,IAAA,GAAA,IAAA,CAAA,IAAA;AAAA,YAAA,IAAA,GAAA,IAAA,CAAA,IAAA;;AAEA,YAAA,QAAA,EAAA,IAAA,CAAA,UAAA,GAAA,CAAA,CAAA,GAAA,KAAA,EAAA,CAAA,GAAA,MAAA,CAAA;AAEA,QAAA,IAAA,CAAA,IAAA,CAAA,IAAA,GAAA,YAAA,MAAA,4BAAA,IAAA,CAAA,QAAA,KAAA,EAAA;AAEA,YAAA,EAAA,GAAA,IAAA,CAAA,KAAA;AAAA,YAAA,EAAA,GAAA,IAAA,CAAA,MAAA;AACA,QAAA,IAAA,CAAA,IAAA,CAAA,CAAA,GAAA,IAAA,CAAA,UAAA,CAAA,CAAA,IAAA,EAAA,GAAA,CAAA;AACA,QAAA,IAAA,CAAA,IAAA,CAAA,CAAA,GAAA,IAAA,CAAA,UAAA,CAAA,CAAA,IAAA,EAAA,GAAA,CAAA;;AAEA,0CAAA,IAAA,CAAA,MAAA;AAAA,YAAA,EAAA;AAAA,YAAA,EAAA;;AACA,QAAA,IAAA,CAAA,IAAA,CAAA,CAAA,GAAA,IAAA,CAAA,UAAA,CAAA,CAAA,IAAA,EAAA;AACA,QAAA,IAAA,CAAA,IAAA,CAAA,CAAA,GAAA,IAAA,CAAA,UAAA,CAAA,CAAA,IAAA,EAAA;AAEA,QAAA,IAAA,CAAA,GAAA,aAAA,IAAA,CAAA,UAAA,CAAA,QAAA,EAAA,SAAA,CAAA;AAEA,eAAA,IAAA;AACA,OAlBA,CAAA;AAmBA,KArEA;AAsEA,IAAA,aAtEA,2BAsEA;AACA,UAAA,OAAA,GAAA,IAAA,CAAA,OAAA;AAAA,UAAA,YAAA,GAAA,IAAA,CAAA,YAAA;AAEA,UAAA,MAAA,GAAA,YAAA,CAAA,MAAA;AAAA,UAAA,KAAA,GAAA,YAAA,CAAA,KAAA;AAEA,WAAA,QAAA,GAAA,KAAA,CAAA,GAAA,CAAA,UAAA,IAAA,EAAA;AACA,YAAA,MAAA,GAAA,IAAA,CAAA,MAAA;AAAA,YAAA,MAAA,GAAA,IAAA,CAAA,MAAA;AAAA,YAAA,QAAA,GAAA,IAAA,CAAA,QAAA;AAEA,YAAA,WAAA,GAAA,MAAA,CAAA,IAAA,CAAA;AAAA,cAAA,IAAA,QAAA,IAAA;AAAA,iBAAA,IAAA,KAAA,MAAA;AAAA,SAAA,EAAA,UAAA;AACA,YAAA,WAAA,GAAA,MAAA,CAAA,IAAA,CAAA;AAAA,cAAA,IAAA,SAAA,IAAA;AAAA,iBAAA,IAAA,KAAA,MAAA;AAAA,SAAA,EAAA,UAAA;AAEA,YAAA,IAAA,GAAA,OAAA,CAAA,WAAA,EAAA,WAAA,CAAA,CAAA,GAAA,CAAA,UAAA,IAAA;AAAA,iBAAA,IAAA,CAAA,GAAA,CAAA,UAAA,CAAA;AAAA,mBAAA,UAAA,CAAA,CAAA,CAAA,OAAA,CAAA,EAAA,CAAA,CAAA;AAAA,WAAA,CAAA;AAAA,SAAA,CAAA;AACA,YAAA,CAAA,cAAA,IAAA,CAAA,CAAA,CAAA,CAAA,QAAA,EAAA,eAAA,IAAA,CAAA,CAAA,CAAA,CAAA,QAAA,EAAA,cAAA,IAAA,CAAA,CAAA,CAAA,CAAA,QAAA,EAAA,CAAA;AACA,YAAA,GAAA,iBAAA,IAAA,CAAA,QAAA,EAAA,CAAA;AACA,YAAA,IAAA,GAAA,YAAA,MAAA,4BAAA,QAAA,KAAA,EAAA;AAEA,+CAAA,IAAA;AAAA,UAAA,IAAA,EAAA,IAAA;AAAA,UAAA,GAAA,EAAA,GAAA;AAAA,UAAA,CAAA,EAAA,CAAA;AAAA,UAAA,IAAA,EAAA;AAAA;AACA,OAZA,CAAA;AAaA,KAxFA;AAyFA,IAAA,OAzFA,mBAyFA,KAzFA,EAyFA,GAzFA,EAyFA;AACA,UAAA,eAAA,GAAA,IAAA,CAAA,eAAA;AAEA,UAAA,YAAA,GAAA,eAAA,CAAA,KAAA,EAAA,GAAA,CAAA;AAEA,aAAA,CAAA,KAAA,EAAA,YAAA,EAAA,GAAA,CAAA;AACA,KA/FA;AAgGA,IAAA,eAhGA,yCAgGA;AAAA;AAAA,UAAA,EAAA;AAAA,UAAA,EAAA;;AAAA;AAAA,UAAA,EAAA;AAAA,UAAA,EAAA;;AACA,UAAA,gBAAA,GAAA,IAAA,CAAA,gBAAA;AAAA,UAAA,YAAA,GAAA,IAAA,CAAA,YAAA;AAEA,UAAA,SAAA,GAAA,YAAA,CAAA,SAAA;AAAA,UAAA,CAAA,GAAA,YAAA,CAAA,CAAA;AAEA,UAAA,EAAA,GAAA,CAAA,EAAA,GAAA,EAAA,IAAA,CAAA;AAAA,UAAA,EAAA,GAAA,CAAA,EAAA,GAAA,EAAA,IAAA,CAAA;AAEA,UAAA,QAAA,GAAA,gBAAA,CAAA,CAAA,EAAA,EAAA,EAAA,CAAA,EAAA,CAAA,EAAA,EAAA,EAAA,CAAA,CAAA;AAEA,UAAA,YAAA,GAAA,QAAA,GAAA,SAAA;AACA,UAAA,QAAA,GAAA,YAAA,GAAA,CAAA;AAEA,UAAA,EAAA,GAAA,EAAA;AAAA,UAAA,EAAA,GAAA,EAAA;;AAEA,SAAA;AACA,QAAA,EAAA,IAAA,QAAA;AACA,QAAA,EAAA,GAAA,gBAAA,CAAA,CAAA,EAAA,CAAA,EAAA,EAAA,EAAA,CAAA,EAAA,EAAA,CAAA,CAAA,CAAA,CAAA;AACA,OAHA,QAGA,gBAAA,CAAA,CAAA,EAAA,EAAA,EAAA,CAAA,EAAA,CAAA,EAAA,EAAA,EAAA,CAAA,CAAA,GAAA,YAHA;;AAKA,aAAA,CAAA,EAAA,EAAA,EAAA,CAAA;AACA,KApHA;AAqHA,IAAA,gBArHA,4BAqHA,CArHA,SAqHA,CArHA,EAqHA;AAAA;AAAA,UAAA,EAAA;AAAA,UAAA,EAAA;;AACA,UAAA,CAAA,GAAA,EAAA,GAAA,CAAA,GAAA,EAAA,GAAA,CAAA,GAAA,CAAA;AAEA,aAAA,CAAA,CAAA,EAAA,CAAA,CAAA;AACA,KAzHA;AA0HA,IAAA,eA1HA,6BA0HA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,gBAAA,SADA,GACA,MADA,CACA,SADA,EACA,QADA,GACA,MADA,CACA,QADA,EACA,KADA,GACA,MADA,CACA,KADA;AAAA;AAAA,uBAGA,SAAA,EAHA;;AAAA;AAKA,gBAAA,MAAA,CAAA,cAAA,GAAA,QAAA,CAAA,GAAA,CAAA;AAAA,sBAAA,GAAA,SAAA,GAAA;AAAA,yBAAA,KAAA,CAAA,GAAA,CAAA,CAAA,CAAA,EAAA,cAAA,EAAA;AAAA,iBAAA,CAAA;;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA,KAhIA;AAiIA,IAAA,eAjIA,mCAiIA;AAAA,UAAA,OAAA,UAAA,OAAA;AAAA,UAAA,OAAA,UAAA,OAAA;AACA,UAAA,KAAA,GAAA,IAAA,CAAA,KAAA;AAAA,UAAA,MAAA,GAAA,IAAA,CAAA,MAAA;AAAA,UAAA,GAAA,GAAA,IAAA,CAAA,GAAA;AAEA,UAAA,CAAA,GAAA,EAAA;AAEA,UAAA,SAAA,GAAA,CAAA,OAAA,GAAA,KAAA,EAAA,OAAA,CAAA,CAAA,CAAA;AACA,UAAA,SAAA,GAAA,CAAA,OAAA,GAAA,MAAA,EAAA,OAAA,CAAA,CAAA,CAAA;AAEA,MAAA,OAAA,CAAA,IAAA,gEAAA,OAAA,eAAA,OAAA,wCAAA,SAAA,eAAA,SAAA;AACA;AA1IA;AAvQA,CAAA","sourcesContent":["<template>\n  <div\n    class=\"dv-flyline-chart-enhanced\"\n    :style=\"`background-image: url(${mergedConfig ? mergedConfig.bgImgSrc : ''})`\"\n    :ref=\"ref\"\n    @click=\"consoleClickPos\"\n  >\n    <svg v-if=\"flylines.length\" :width=\"width\" :height=\"height\">\n      <defs>\n        <radialGradient\n          :id=\"flylineGradientId\"\n          cx=\"50%\" cy=\"50%\" r=\"50%\"\n        >\n          <stop\n            offset=\"0%\" stop-color=\"#fff\"\n            stop-opacity=\"1\"\n          />\n          <stop\n            offset=\"100%\" stop-color=\"#fff\"\n            stop-opacity=\"0\"\n          />\n        </radialGradient>\n\n        <radialGradient\n          :id=\"haloGradientId\"\n          cx=\"50%\" cy=\"50%\" r=\"50%\"\n        >\n          <stop\n            offset=\"0%\" stop-color=\"#fff\"\n            stop-opacity=\"0\"\n          />\n          <stop\n            offset=\"100%\" stop-color=\"#fff\"\n            stop-opacity=\"1\"\n          />\n        </radialGradient>\n      </defs>\n\n      <!-- points -->\n      <g v-for=\"point in flylinePoints\" :key=\"point.key + Math.random()\">\n        <defs>\n          <circle\n            v-if=\"point.halo.show\"\n            :id=\"`halo${unique}${point.key}`\"\n            :cx=\"point.coordinate[0]\"\n            :cy=\"point.coordinate[1]\"\n          >\n            <animate\n              attributeName=\"r\"\n              :values=\"`1;${point.halo.radius}`\"\n              :dur=\"`${point.halo.time}s`\"\n              repeatCount=\"indefinite\"\n            />\n            <animate\n              attributeName=\"opacity\"\n              values=\"1;0\"\n              :dur=\"`${point.halo.time}s`\"\n              repeatCount=\"indefinite\"\n            />\n          </circle>\n        </defs>\n\n        <!-- halo gradient mask -->\n        <mask :id=\"`mask${unique}${point.key}`\">\n          <use\n            v-if=\"point.halo.show\"\n            :xlink:href=\"`#halo${unique}${point.key}`\"\n            :fill=\"`url(#${haloGradientId})`\"\n          />\n        </mask>\n\n        <!-- point halo -->\n        <use\n          v-if=\"point.halo.show\"\n          :xlink:href=\"`#halo${unique}${point.key}`\"\n          :fill=\"point.halo.color\"\n          :mask=\"`url(#mask${unique}${point.key})`\"\n        />\n\n        <!-- point icon -->\n        <image\n          v-if=\"point.icon.show\"\n          :xlink:href=\"point.icon.src\"\n          :width=\"point.icon.width\"\n          :height=\"point.icon.height\"\n          :x=\"point.icon.x\"\n          :y=\"point.icon.y\"\n        />\n\n        <!-- point text -->\n        <text\n          v-if=\"point.text.show\"\n          :style=\"`fontSize:${point.text.fontSize}px;color:${point.text.color}`\"\n          :fill=\"point.text.color\"\n          :x=\"point.text.x\"\n          :y=\"point.text.y\"\n        >\n          {{ point.name }}\n        </text>\n      </g>\n\n      <!-- flylines -->\n      <g v-for=\"(line, i) in flylines\" :key=\"line.key + Math.random()\">\n        <defs>\n          <path\n            :id=\"line.key\"\n            :ref=\"line.key\"\n            :d=\"line.d\"\n            fill=\"transparent\"\n          />\n        </defs>\n\n        <!-- orbit line -->\n        <use\n          :xlink:href=\"`#${line.key}`\"\n          :stroke-width=\"line.width\"\n          :stroke=\"line.orbitColor\"\n        />\n\n        <!-- fly line gradient mask -->\n        <mask :id=\"`mask${unique}${line.key}`\">\n          <circle cx=\"0\" cy=\"0\" :r=\"line.radius\" :fill=\"`url(#${flylineGradientId})`\">\n            <animateMotion\n              :dur=\"line.time\"\n              :path=\"line.d\"\n              rotate=\"auto\"\n              repeatCount=\"indefinite\"\n            />\n          </circle>\n        </mask>\n\n        <!-- fly line -->\n        <use\n          v-if=\"flylineLengths[i]\"\n          :xlink:href=\"`#${line.key}`\"\n          :stroke-width=\"line.width\"\n          :stroke=\"line.color\"\n          :mask=\"`url(#mask${unique}${line.key})`\"\n        >\n          <animate\n            attributeName=\"stroke-dasharray\"\n            :from=\"`0, ${flylineLengths[i]}`\"\n            :to=\"`${flylineLengths[i]}, 0`\"\n            :dur=\"line.time\"\n            repeatCount=\"indefinite\"\n          />\n        </use>\n      </g>\n    </svg>\n  </div>\n</template>\n\n<script>\nimport { deepMerge } from '@jiaminghi/charts/lib/util/index'\n\nimport { deepClone } from '@jiaminghi/c-render/lib/plugin/util'\n\nimport { randomExtend, getPointDistance, uuid } from '../../../util/index'\n\nimport autoResize from '../../../mixin/autoResize'\n\nexport default {\n  name: 'DvFlylineChartEnhanced',\n  mixins: [autoResize],\n  props: {\n    config: {\n      type: Object,\n      default: () => ({})\n    },\n    dev: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data () {\n    const id = uuid()\n    return {\n      ref: 'dv-flyline-chart-enhanced',\n      unique: Math.random(),\n      flylineGradientId: `flyline-gradient-id-${id}`,\n      haloGradientId: `halo-gradient-id-${id}`,\n      /**\n       * @description Type Declaration\n       * \n       * interface Halo {\n       *    show?: boolean\n       *    duration?: [number, number]\n       *    color?: string\n       *    radius?: number\n       * }\n       * \n       * interface Text {\n       *    show?: boolean\n       *    offset?: [number, number]\n       *    color?: string\n       *    fontSize?: number\n       * }\n       * \n       * interface Icon {\n       *    show?: boolean\n       *    src?: string\n       *    width?: number\n       *    height?: number\n       * }\n       * \n       * interface Point {\n       *    name: string\n       *    coordinate: [number, number]\n       *    halo?: Halo\n       *    text?: Text\n       *    icon?: Icon\n       * }\n       * \n       * interface Line {\n       *    width?: number\n       *    color?: string\n       *    orbitColor?: string\n       *    duration?: [number, number]\n       *    radius?: string\n       * }\n       * \n       * interface Flyline extends Line {\n       *    source: string\n       *    target: string\n       * }\n       * \n       * interface FlylineWithPath extends Flyline {\n       *    d: string\n       *    path: [[number, number], [number, number], [number, number]]\n       *    key: string\n       * }\n       */\n      defaultConfig: {\n        /**\n         * @description Flyline chart points\n         * @type {Point[]}\n         * @default points = []\n         */\n        points: [],\n        /**\n         * @description Lines\n         * @type {Flyline[]}\n         * @default lines = []\n         */\n        lines: [],\n        /**\n         * @description Global halo configuration\n         * @type {Halo}\n         */\n        halo: {\n          /**\n           * @description Whether to show halo\n           * @type {Boolean}\n           * @default show = false\n           */\n          show: false,\n          /**\n           * @description Halo animation duration (1s = 10)\n           * @type {[number, number]}\n           */\n          duration: [20, 30],\n          /**\n           * @description Halo color\n           * @type {String}\n           * @default color = '#fb7293'\n           */\n          color: '#fb7293',\n          /**\n           * @description Halo radius\n           * @type {Number}\n           * @default radius = 120\n           */\n          radius: 120\n        },\n        /**\n         * @description Global text configuration\n         * @type {Text}\n         */\n        text: {\n          /**\n           * @description Whether to show text\n           * @type {Boolean}\n           * @default show = false\n           */\n          show: false,\n          /**\n           * @description Text offset\n           * @type {[number, number]}\n           * @default offset = [0, 15]\n           */\n          offset: [0, 15],\n          /**\n           * @description Text color\n           * @type {String}\n           * @default color = '#ffdb5c'\n           */\n          color: '#ffdb5c',\n          /**\n           * @description Text font size\n           * @type {Number}\n           * @default fontSize = 12\n           */\n          fontSize: 12\n        },\n        /**\n         * @description Global icon configuration\n         * @type {Icon}\n         */\n        icon: {\n          /**\n           * @description Whether to show icon\n           * @type {Boolean}\n           * @default show = false\n           */\n          show: false,\n          /**\n           * @description Icon src\n           * @type {String}\n           * @default src = ''\n           */\n          src: '',\n          /**\n           * @description Icon width\n           * @type {Number}\n           * @default width = 15\n           */\n          width: 15,\n          /**\n           * @description Icon height\n           * @type {Number}\n           * @default width = 15\n           */\n          height: 15\n        },\n        /**\n         * @description Global line configuration\n         * @type {Line}\n         */\n        line: {\n          /**\n           * @description Line width\n           * @type {Number}\n           * @default width = 1\n           */\n          width: 1,\n          /**\n           * @description Flyline color\n           * @type {String}\n           * @default color = '#ffde93'\n           */\n          color: '#ffde93',\n          /**\n           * @description Orbit color\n           * @type {String}\n           * @default orbitColor = 'rgba(103, 224, 227, .2)'\n           */\n          orbitColor: 'rgba(103, 224, 227, .2)',\n          /**\n           * @description Flyline animation duration\n           * @type {[number, number]}\n           * @default duration = [20, 30]\n           */\n          duration: [20, 30],\n          /**\n           * @description Flyline radius\n           * @type {Number}\n           * @default radius = 100\n           */\n          radius: 100\n        },\n        /**\n         * @description Back ground image url\n         * @type {String}\n         * @default bgImgSrc = ''\n         */\n        bgImgSrc: '',\n        /**\n         * @description K value\n         * @type {Number}\n         * @default k = -0.5\n         * @example k = -1 ~ 1\n         */\n        k: -0.5,\n        /**\n         * @description Flyline curvature\n         * @type {Number}\n         * @default curvature = 5\n         */\n        curvature: 5,\n        /**\n         * @description Relative points position\n         * @type {Boolean}\n         * @default relative = true\n         */\n        relative: true\n      },\n      /**\n       * @description Fly line data\n       * @type {FlylineWithPath[]}\n       * @default flylines = []\n       */\n      flylines: [],\n      /**\n       * @description Fly line lengths\n       * @type {Number[]}\n       * @default flylineLengths = []\n       */\n      flylineLengths: [],\n      /**\n       * @description Fly line points\n       * @default flylinePoints = []\n       */\n      flylinePoints: [],\n\n      mergedConfig: null\n    }\n  },\n  watch: {\n    config () {\n      const { calcData } = this\n\n      calcData()\n    }\n  },\n  methods: {\n    afterAutoResizeMixinInit () {\n      const { calcData } = this\n\n      calcData()\n    },\n    onResize () {\n      const { calcData } = this\n\n      calcData()\n    },\n    async calcData () {\n      const { mergeConfig, calcflylinePoints, calcLinePaths } = this\n\n      mergeConfig()\n\n      calcflylinePoints()\n\n      calcLinePaths()\n\n      const { calcLineLengths } = this\n\n      await calcLineLengths()\n    },\n    mergeConfig () {\n      let { config, defaultConfig } = this\n\n      const mergedConfig = deepMerge(deepClone(defaultConfig, true), config || {})\n\n      const { points, lines, halo, text, icon, line } = mergedConfig\n\n      mergedConfig.points = points.map(item => {\n        item.halo = deepMerge(deepClone(halo, true), item.halo || {})\n        item.text = deepMerge(deepClone(text, true), item.text || {})\n        item.icon = deepMerge(deepClone(icon, true), item.icon || {})\n\n        return item\n      })\n\n      mergedConfig.lines = lines.map(item => {\n        return deepMerge(deepClone(line, true), item)\n      })\n\n      this.mergedConfig = mergedConfig\n    },\n    calcflylinePoints () {\n      const { mergedConfig, width, height } = this\n\n      const { relative, points } = mergedConfig\n\n      this.flylinePoints = points.map((item, i) => {\n        const { coordinate: [x, y], halo, icon, text } = item\n\n        if (relative) item.coordinate = [x * width, y * height]\n\n        item.halo.time = randomExtend(...halo.duration) / 10\n\n        const { width: iw, height: ih } = icon\n        item.icon.x = item.coordinate[0] - iw / 2\n        item.icon.y = item.coordinate[1] - ih / 2\n\n        const [ox, oy] = text.offset\n        item.text.x = item.coordinate[0] + ox\n        item.text.y = item.coordinate[1] + oy\n\n        item.key = `${item.coordinate.toString()}${i}`\n\n        return item\n      })\n    },\n    calcLinePaths () {\n      const { getPath, mergedConfig } = this\n\n      const { points, lines } = mergedConfig\n\n      this.flylines = lines.map(item => {\n        const { source, target, duration } = item\n\n        const sourcePoint = points.find(({ name }) => name === source).coordinate\n        const targetPoint = points.find(({ name }) => name === target).coordinate\n\n        const path = getPath(sourcePoint, targetPoint).map(item => item.map(v => parseFloat(v.toFixed(10))))\n        const d = `M${path[0].toString()} Q${path[1].toString()} ${path[2].toString()}`\n        const key = `path${path.toString()}`\n        const time = randomExtend(...duration) / 10\n\n        return { ...item, path, key, d, time }\n      })\n    },\n    getPath (start, end) {\n      const { getControlPoint } = this\n\n      const controlPoint = getControlPoint(start, end)\n\n      return [start, controlPoint, end]\n    },\n    getControlPoint ([sx, sy], [ex, ey]) {\n      const { getKLinePointByx, mergedConfig } = this\n\n      const { curvature, k } = mergedConfig\n\n      const [mx, my] = [(sx + ex) / 2, (sy + ey) / 2]\n\n      const distance = getPointDistance([sx, sy], [ex, ey])\n\n      const targetLength = distance / curvature\n      const disDived = targetLength / 2\n\n      let [dx, dy] = [mx, my]\n\n      do {\n        dx += disDived\n        dy = getKLinePointByx(k, [mx, my], dx)[1]\n      } while (getPointDistance([mx, my], [dx, dy]) < targetLength)\n\n      return [dx, dy]\n    },\n    getKLinePointByx (k, [lx, ly], x) {\n      const y = ly - k * lx + k * x\n\n      return [x, y]\n    },\n    async calcLineLengths () {\n      const { $nextTick, flylines, $refs } = this\n\n      await $nextTick()\n\n      this.flylineLengths = flylines.map(({ key }) => $refs[key][0].getTotalLength())\n    },\n    consoleClickPos ({ offsetX, offsetY }) {\n      const { width, height, dev } = this\n\n      if (!dev) return\n\n      const relativeX = (offsetX / width).toFixed(2)\n      const relativeY = (offsetY / height).toFixed(2)\n\n      console.warn(`dv-flyline-chart-enhanced DEV: \\n Click Position is [${offsetX}, ${offsetY}] \\n Relative Position is [${relativeX}, ${relativeY}]`)\n    }\n  }\n}\n</script>"],"sourceRoot":"node_modules/@jiaminghi/data-view/lib/components/flylineChartEnhanced/src"}]}